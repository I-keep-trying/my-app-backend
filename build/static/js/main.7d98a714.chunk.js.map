{"version":3,"sources":["reducers/weatherReducer.js","reducers/timeZoneReducer.js","reducers/countryDataReducer.js","App.js","store.js","index.js","services/countriesData.js","reducers/countryReducer.js"],"names":["getWeather","location","dispatch","a","countryService","weather","type","data","weatherReducer","state","action","getTimeZone","timeZone","timeZoneReducer","getCountryData","country","getCiaData","countryData","countryDataReducer","toString","includes","Countries","loadable","CountriesMobile","App","useDispatch","countries","useSelector","initialCountries","useEffect","undefined","initializeCountries","isMobile","reducer","combineReducers","countryReducer","countriesData","unit","unitReducer","time","menu","menuReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","getAll","axios","get","response","params","res","then","catch","err","show","toggleUnit","toggleMenu","resetFilter","reset","searchCountriesByName","input","filterCountries","filterCountriesByRegion","region","filterCountriesBySubRegion","subregion","noCapitals","filter","item","name","common","antarctica","c","map","capital","bouvetIsland","heardIsland","macau","usMinor","southGeorgia","frenchSouthern","otherCountries","filtered","toSearch","toLowerCase","filterAll","startsWith","filterSome","selectRegion","regionFiltered","selectSubRegion","subregionFiltered","s","newState"],"mappings":"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","file":"static/js/main.7d98a714.chunk.js","sourcesContent":["import countryService from '../services/countriesData'\n\nconst weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getWeather = (location) => {\n  return async (dispatch) => {\n    const weather = await countryService.getWeather(location)\n\n    dispatch({\n      type: 'GET_WEATHER',\n      data: weather,\n    })\n  }\n}\n\nexport default weatherReducer\n","import countryService from '../services/countriesData'\n\nconst timeZoneReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_TIME_ZONE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getTimeZone = (location) => {\n // console.log('location for time zone', location)\n  return async (dispatch) => {\n    const timeZone = await countryService.getTimeZone(location)\n    dispatch({\n      type: 'GET_TIME_ZONE',\n      data: timeZone,\n    })\n  }\n}\n\nexport default timeZoneReducer\n\n/* \nlocation ? (2) [-53.1, 72.51666666]\ntimeZoneReducer.js:13 location for time zone \n{location: Array(2)}\nlocation: (2) [-53.1, 72.51666666]\n0: -53.1\n1: 72.51666666\nlength: 2\nlastIndex: (...)lastItem: (...)[[Prototype]]: Array(0)[[Prototype]]: Object\n*/","import countryService from '../services/countriesData'\n\nconst countryDataReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'FIND_COUNTRY':\n      if (action.data.toString().includes('Error')) {\n        return { data: 'no data' }\n      } else {\n        return action.data\n      }\n    default:\n      return state\n  }\n}\n\nexport const getCountryData = (country) => {\n  return async (dispatch) => {\n    const countryData = await countryService.getCiaData(country)\n    dispatch({\n      type: 'FIND_COUNTRY',\n      data: countryData,\n    })\n  }\n}\n\nexport default countryDataReducer\n","import React, { useEffect } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport loadable from '@loadable/component'\r\nimport { initializeCountries } from './reducers/countryReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Countries = loadable(() => import('./pages/Countries'))\r\nconst CountriesMobile = loadable(() => import('./pages/CountriesMobile'))\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const countries = useSelector((state) => {\r\n    return state.countries.initialCountries\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (countries === undefined) {\r\n      dispatch(initializeCountries())\r\n    }\r\n  }, [dispatch, countries])\r\n\r\n  return countries !== undefined ? (\r\n    isMobile ? (\r\n      <CountriesMobile />\r\n    ) : (\r\n      <Countries />\r\n    )\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport countryReducer, {\n  unitReducer,\n  menuReducer,\n} from './reducers/countryReducer'\nimport weatherReducer from './reducers/weatherReducer'\nimport timeZoneReducer from './reducers/timeZoneReducer'\nimport countryDataReducer from './reducers/countryDataReducer'\n\nconst reducer = combineReducers({\n  countries: countryReducer,\n  countriesData: countryDataReducer,\n  unit: unitReducer,\n  weather: weatherReducer,\n  time: timeZoneReducer,\n  menu: menuReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './assets/css/semantic.css'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'core-js'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//  \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\",\r\n// local proxy: \"proxy\": \"http://localhost:3001/\"\r\n// backend: https://github.com/I-keep-trying/my-app-backend\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/countries'\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getWeather = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/weather/lat/${params.location[0]}/lng/${params.location[1]}/unit/${params.unit}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getTimeZone = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/time/lat/${params.location[0]}/lng/${params.location[1]}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getCiaData = async (params) => {\r\n  const response = await axios\r\n    .get(`/api/ciadata/${params} `)\r\n    .then((res) => {\r\n      if (res.data === '{ \"no data\" }\\n') {\r\n        return { ...res, data: 'no data' }\r\n      }\r\n      return res\r\n    })\r\n    .catch((err) => {\r\n      return err\r\n    })\r\n  return response\r\n}\r\n\r\nexport default { getAll, getWeather, getTimeZone, getCiaData }\r\n","import countryService from '../services/countriesData'\r\n\r\n/* ---------- Reducers ------------- */\r\nconst countryReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_COUNTRIES':\r\n      // Find countries from restcountries.com api with missing keys\r\n      const noCapitals = action.data.filter(\r\n        (item) =>\r\n          item.name.common === 'Antarctica' ||\r\n          item.name.common === 'Bouvet Island' ||\r\n          item.name.common === 'Heard Island and McDonald Islands' ||\r\n          item.name.common === 'Macau' ||\r\n          item.name.common === 'United States Minor Outlying Islands' ||\r\n          item.name.common === 'South Georgia' ||\r\n          item.name.common === 'French Southern and Antarctic Lands'\r\n      )\r\n\r\n      // Create replacements inserting missing keys\r\n      const antarctica = noCapitals\r\n        .filter((c) => c.name.common === 'Antarctica')\r\n        .map((c) => {\r\n          return { ...c, capital: ['No Capital City'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const bouvetIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Bouvet Island')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Oslo'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const heardIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Heard Island and McDonald Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Bern'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const macau = noCapitals\r\n        .filter((c) => c.name.common === 'Macau')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Macau'] }\r\n        })\r\n\r\n      const usMinor = noCapitals\r\n        .filter((c) => c.name.common === 'United States Minor Outlying Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Washington DC'] }\r\n        })\r\n\r\n      const southGeorgia = noCapitals\r\n        .filter((c) => c.name.common === 'South Georgia')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      const frenchSouthern = noCapitals\r\n        .filter((c) => c.name.common === 'French Southern and Antarctic Lands')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      // Remove defective country objects\r\n      const otherCountries = action.data.filter(\r\n        (item) =>\r\n          item.name.common !== 'Antarctica' &&\r\n          item.name.common !== 'Bouvet Island' &&\r\n          item.name.common !== 'Heard Island and McDonald Islands' &&\r\n          item.name.common !== 'Macau' &&\r\n          item.name.common !== 'United States Minor Outlying Islands' &&\r\n          item.name.common !== 'South Georgia' &&\r\n          item.name.common !== 'French Southern and Antarctic Lands'\r\n      )\r\n\r\n      // Insert replacement objects with keys in place\r\n      const initialCountries = [\r\n        ...otherCountries,\r\n        southGeorgia[0],\r\n        heardIsland[0],\r\n        macau[0],\r\n        usMinor[0],\r\n        antarctica[0],\r\n        bouvetIsland[0],\r\n        frenchSouthern[0],\r\n      ]\r\n\r\n      return {\r\n        initialCountries,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: 'All',\r\n          subregion: '',\r\n          reset: false,\r\n        },\r\n        filtered: initialCountries,\r\n      }\r\n    case 'FILTER_COUNTRIES':\r\n      if (action.input === '') {\r\n        return {\r\n          initialCountries,\r\n          filter: {\r\n            input: '',\r\n            country: '',\r\n            region: 'All',\r\n            subregion: '',\r\n            reset: false,\r\n          },\r\n          filtered: initialCountries,\r\n        }\r\n      } else if (action.input) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            input: action.input.toLowerCase(),\r\n          },\r\n        }\r\n\r\n        const filterAll = toSearch.initialCountries.filter((c) =>\r\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\r\n        )\r\n\r\n        const filterSome = toSearch.filtered.filter((c) =>\r\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\r\n        )\r\n\r\n        const filtered =\r\n          toSearch.filter.region === 'All' ? filterAll : filterSome\r\n\r\n        return { ...toSearch, filtered: filtered }\r\n      } else if (action.country) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            country: action.country.name.common.toLowerCase(),\r\n            region: action.country.region,\r\n            subregion: action.country.subregion,\r\n          },\r\n        }\r\n        const filtered = toSearch.initialCountries.filter(\r\n          (c) =>\r\n            c.name.common.toLowerCase() ===\r\n            toSearch.filter.country.toLowerCase()\r\n        )\r\n        return { ...toSearch, filtered: filtered }\r\n      } else if (action.region) {\r\n        const selectRegion = {\r\n          ...state,\r\n          filter: { ...state.filter, region: action.region.toLowerCase() },\r\n        }\r\n\r\n        const regionFiltered =\r\n          selectRegion.filter.region === 'all'\r\n            ? selectRegion.initialCountries\r\n            : selectRegion.initialCountries.filter(\r\n                (c) => c.region.toLowerCase() === selectRegion.filter.region\r\n              )\r\n\r\n        return {\r\n          ...selectRegion,\r\n          filtered: regionFiltered,\r\n          filter: {\r\n            ...selectRegion.filter,\r\n            input: '',\r\n            country: '',\r\n            region: action.region.toLowerCase(),\r\n            subregion: '',\r\n          },\r\n        }\r\n      } else if (action.subregion) {\r\n        const selectSubRegion = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            subregion: action.subregion.toLowerCase(),\r\n          },\r\n        }\r\n        const subregionFiltered = selectSubRegion.initialCountries.filter(\r\n          (s) => s.subregion?.toLowerCase() === selectSubRegion.filter.subregion\r\n        )\r\n        const newState = { ...selectSubRegion, filtered: subregionFiltered }\r\n        return newState\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'RESET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: 'All',\r\n          subregion: '',\r\n          reset: true,\r\n        },\r\n        filtered: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const unitReducer = (state = { unit: 'metric' }, action) => {\r\n  switch (action.type) {\r\n    case 'UNIT_TOGGLE':\r\n      const unit = state.unit === 'metric' ? 'imperial' : 'metric'\r\n      return { ...state, unit: unit }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const menuReducer = (state = { show: false }, action) => {\r\n  switch (action.type) {\r\n    case 'MENU_TOGGLE':\r\n      const show = state.show === false ? true : false\r\n      return { ...state, show: show }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* ------------ Actions ------------- */\r\n\r\nexport const initializeCountries = () => {\r\n  return async (dispatch) => {\r\n    const countries = await countryService.getAll()\r\n    dispatch({\r\n      type: 'INIT_COUNTRIES',\r\n      data: countries,\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleUnit = (unit) => {\r\n  return {\r\n    type: 'UNIT_TOGGLE',\r\n    unit: unit,\r\n  }\r\n}\r\n\r\nexport const toggleMenu = (show) => {\r\n  return {\r\n    type: 'MENU_TOGGLE',\r\n    show: show,\r\n  }\r\n}\r\n\r\nexport const resetFilter = (reset) => {\r\n  return {\r\n    type: 'RESET_FILTER',\r\n    reset: reset,\r\n  }\r\n}\r\n\r\nexport const searchCountriesByName = (input) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    input,\r\n  }\r\n}\r\n\r\nexport const searchCountriesByCapital = (inputCap) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    inputCap,\r\n  }\r\n}\r\n\r\nexport const filterCountries = (country) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    country,\r\n  }\r\n}\r\n\r\nexport const filterCountriesByRegion = (region) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    region,\r\n  }\r\n}\r\n\r\nexport const filterCountriesBySubRegion = (subregion) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    subregion,\r\n  }\r\n}\r\n\r\nexport default countryReducer\r\n"],"sourceRoot":""}