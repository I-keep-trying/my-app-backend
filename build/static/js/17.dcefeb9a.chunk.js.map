{"version":3,"sources":["zoomLevels.js","pages/Country.js"],"names":["zoomLevel","country","name","common","capital","official","area","Map","loadable","Weather","Country1","data","useState","activeTab","setActiveTab","dispatch","useDispatch","unit","useSelector","state","location","undefined","capitalInfo","latlng","useEffect","getWeather","getTimeZone","handleTabClick","e","Menu","id","attached","secondary","Breadcrumb","size","Section","link","onClick","resetFilter","Divider","icon","filterCountriesByRegion","region","subregion","filterCountriesBySubRegion","active","pointing","Item","lt","lg","zm","Image","centered","src","isIE","flags","png","svg","alt","bordered","Segment","Object","entries","coatOfArms","length","Card","fluid","Country","React","memo"],"mappings":"qPA0GeA,EA1GM,SAAAC,GACjB,QAAQ,GACN,IAA6B,eAAxBA,EAAQC,KAAKC,OAChB,OAAO,EAET,IAA6B,mCAAxBF,EAAQC,KAAKC,OAChB,OAAO,EAET,IAA6B,kBAAxBF,EAAQC,KAAKC,QACQ,gBAAxBF,EAAQC,KAAKC,QACW,UAAxBF,EAAQC,KAAKC,QACW,UAAxBF,EAAQC,KAAKC,QACW,6BAAxBF,EAAQC,KAAKC,QACW,WAAxBF,EAAQC,KAAKC,OACb,OAAO,EAET,IAA6B,SAAxBF,EAAQC,KAAKC,QACO,iBAAvBF,EAAQG,QAAQ,IACQ,YAAxBH,EAAQC,KAAKC,QACW,cAAxBF,EAAQC,KAAKC,QACW,aAAxBF,EAAQC,KAAKC,OACb,OAAO,IAET,IAA6B,eAAxBF,EAAQC,KAAKC,OAChB,OAAO,EAET,IAA6B,cAAxBF,EAAQC,KAAKC,QACQ,uBAAxBF,EAAQC,KAAKC,QACW,YAAxBF,EAAQC,KAAKC,QACW,SAAxBF,EAAQC,KAAKC,QACW,eAAxBF,EAAQC,KAAKC,QACW,WAAxBF,EAAQC,KAAKC,QACW,WAAxBF,EAAQC,KAAKC,QACW,aAAxBF,EAAQC,KAAKC,QACW,cAAxBF,EAAQC,KAAKC,QACW,aAAxBF,EAAQC,KAAKC,OACb,OAAO,IAET,IAA+B,qCAA1BF,EAAQC,KAAKG,UACQ,iCAAxBJ,EAAQC,KAAKC,QACW,aAAxBF,EAAQC,KAAKC,QACW,gBAAxBF,EAAQC,KAAKC,QACW,eAAxBF,EAAQC,KAAKC,QACW,iDAAxBF,EAAQC,KAAKC,OACb,OAAO,EAET,IAA6B,aAAxBF,EAAQC,KAAKC,QACQ,YAAxBF,EAAQC,KAAKC,QACW,eAAxBF,EAAQC,KAAKC,QACW,eAAxBF,EAAQC,KAAKC,QACW,YAAxBF,EAAQC,KAAKC,QACW,eAAxBF,EAAQC,KAAKC,QACW,iDAAxBF,EAAQC,KAAKC,OACb,OAAO,IAET,IAA6B,wBAAxBF,EAAQC,KAAKC,QACQ,qBAAxBF,EAAQC,KAAKC,OACb,OAAO,EAET,IAA6B,eAAxBF,EAAQC,KAAKC,QAAgD,gBAAxBF,EAAQC,KAAKC,OACrD,OAAO,EAET,IAA6B,aAAxBF,EAAQC,KAAKC,QACQ,WAAxBF,EAAQC,KAAKC,QACW,wBAAxBF,EAAQC,KAAKC,OACb,OAAO,GAET,IAA6B,4BAAxBF,EAAQC,KAAKC,OAChB,OAAO,GAET,IAA6B,UAAxBF,EAAQC,KAAKC,QAA8C,WAAxBF,EAAQC,KAAKC,OACnD,OAAO,GAET,KAAKF,EAAQK,KAAO,EAClB,OAAO,GAET,KAAKL,EAAQK,KAAO,GAAKL,EAAQK,KAAO,IACtC,OAAO,GAET,KAAKL,EAAQK,KAAO,KAAOL,EAAQK,KAAO,GACxC,OAAO,GAET,KAAKL,EAAQK,KAAO,IAAML,EAAQK,KAAO,GACvC,OAAO,KAET,KAAKL,EAAQK,KAAO,IAAML,EAAQK,KAAO,IACvC,OAAO,EAET,KAAKL,EAAQK,KAAO,KAAOL,EAAQK,KAAO,IACxC,OAAO,EAET,KAAKL,EAAQK,KAAO,KAASL,EAAQK,KAAO,KAC1C,OAAO,EAET,KAAKL,EAAQK,KAAO,MAAUL,EAAQK,KAAO,QAC3C,OAAO,EAET,KAAKL,EAAQK,KAAO,SAAWL,EAAQK,KAAO,IAC5C,OAAO,EAET,QACE,OAAO,I,0BCtFTC,EAAMC,aAAS,kBAAM,wDACrBC,EAAUD,aAAS,kBAAM,wDAEzBE,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,EAAkCC,mBAAS,OAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,cAEXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,KAAKA,QAEzCG,OACwBC,IAA5BV,EAAKW,YAAYC,OACbZ,EAAKY,OACLZ,EAAKW,YAAYC,OAEvBC,qBAAU,WACRT,EACEU,YAAW,CACTL,SAAUA,EACVH,KAAMA,KAGVF,EAASW,YAAY,CAAEN,SAAUA,OAChC,CAACH,IAEJ,IAAMU,EAAiB,SAACC,EAAD,GAAkB,IAAZ1B,EAAW,EAAXA,KAC3BY,EAAaZ,IAEf,OACE,qCACE,cAAC2B,EAAA,EAAD,CAAMC,GAAG,aAAaC,UAAQ,EAACC,WAAS,EAAxC,SACE,eAACC,EAAA,EAAD,CAAYC,KAAK,QAAjB,UACE,cAACD,EAAA,EAAWE,QAAZ,CAEEC,MAAI,EACJC,QAAS,kBAAMtB,EAASuB,gBAH1B,gBACM,OAMN,cAACL,EAAA,EAAWM,QAAZ,CAAoBC,KAAK,kBACzB,cAACP,EAAA,EAAWE,QAAZ,CAEEC,MAAI,EACJC,QAAS,kBAAMtB,EAAS0B,YAAwB9B,EAAK+B,UAHvD,SAKG/B,EAAK+B,QAJD/B,EAAK+B,QAMQ,KAAnB/B,EAAKgC,UACJ,qCACE,cAACV,EAAA,EAAWM,QAAZ,CAAoBC,KAAK,kBACzB,cAACP,EAAA,EAAWE,QAAZ,CAEEC,MAAI,EACJC,QAAS,kBACPtB,EAAS6B,YAA2BjC,EAAKgC,aAJ7C,SAOGhC,EAAKgC,WANDhC,EAAKgC,WAQZ,cAACV,EAAA,EAAWM,QAAZ,CAAoBC,KAAK,kBACzB,cAACP,EAAA,EAAWE,QAAZ,CAA2CU,QAAM,EAAjD,SACGlC,EAAKT,KAAKC,QADYQ,EAAKT,KAAKC,WAKrC,kCAIN,eAAC0B,EAAA,EAAD,CAAMC,GAAG,eAAeC,UAAQ,EAACe,UAAQ,EAACd,WAAS,EAAnD,UACE,cAACH,EAAA,EAAKkB,KAAN,CACE7C,KAAK,MACL2C,OAAsB,QAAdhC,EACRwB,QAASV,IAEX,cAACE,EAAA,EAAKkB,KAAN,CACE7C,KAAK,OACL2C,OAAsB,SAAdhC,EACRwB,QAASV,IACR,IACH,cAACE,EAAA,EAAKkB,KAAN,CACE7C,KAAK,aACL2C,OAAsB,eAAdhC,EACRwB,QAASV,IAEX,cAACE,EAAA,EAAKkB,KAAN,CACE7C,KAAK,UACL2C,OAAsB,YAAdhC,EACRwB,QAASV,IAEX,cAACE,EAAA,EAAKkB,KAAN,CACE7C,KAAK,aACL2C,OAAsB,eAAdhC,EACRwB,QAASV,OAGE,QAAdd,EACC,mCACE,cAACN,EAAD,CAAKyC,GAAIrC,EAAKY,OAAO,GAAI0B,GAAItC,EAAKY,OAAO,GAAI2B,GAAIlD,EAAUW,OAG7D,6BAEa,SAAdE,EACC,cAACsC,EAAA,EAAD,CACErB,GAAG,OACHsB,UAAQ,EACRC,IAAKC,OAAO3C,EAAK4C,MAAMC,IAAM7C,EAAK4C,MAAME,IACxCC,IAAI,eACJxB,KAAK,SACLyB,UAAQ,IAGV,6BAEa,eAAd9C,EACC,mCACE,cAAC+C,EAAA,EAAD,UAC8C,IAA3CC,OAAOC,QAAQnD,EAAKoD,YAAYC,OAC/B,qDAEA,cAACb,EAAA,EAAD,CACErB,GAAG,aACHsB,UAAQ,EACRC,IAAK1C,EAAKoD,WAAWN,IACrBC,IAAI,eACJxB,KAAK,SACLyB,UAAQ,QAMhB,6BAEa,YAAd9C,EACC,mCACE,cAACoD,EAAA,EAAD,CAAMC,OAAK,EAAX,SACE,cAACzD,EAAD,CAASR,QAASU,QAiBtB,6BAEa,eAAdE,EACC,mCACE,cAACoD,EAAA,EAAD,CAAMnC,GAAG,UAAUoC,OAAK,EAAxB,SACE,cAAC,IAAD,CAAKjE,QAASU,QAIlB,iCAMFwD,EAAUC,IAAMC,KAAK3D,GAEZyD","file":"static/js/17.dcefeb9a.chunk.js","sourcesContent":["  const zoomLevel = (country => {\n    switch (true) {\n      case country.name.common === 'Antarctica':\n        return 2\n        \n      case country.name.common === 'British Indian Ocean Territory':\n        return 4\n        \n      case country.name.common === 'French Guiana' ||\n        country.name.common === 'Switzerland' ||\n        country.name.common === 'Congo' ||\n        country.name.common === 'Spain' ||\n        country.name.common === 'Central African Republic' ||\n        country.name.common === 'France':\n        return 5\n        \n      case country.name.common === 'Oman' ||\n        country.capital[0] === 'Yamoussoukro' ||\n        country.name.common === 'Germany' ||\n        country.name.common === 'Indonesia' ||\n        country.name.common === 'DR Congo':\n        return 5.5\n        \n      case country.name.common === 'Mozambique':\n        return 6\n        \n      case country.name.common === 'Palestine' ||\n        country.name.common === 'Dominican Republic' ||\n        country.name.common === 'Croatia' ||\n        country.name.common === 'Togo' ||\n        country.name.common === 'Azerbaijan' ||\n        country.name.common === 'Serbia' ||\n        country.name.common === 'Jordan' ||\n        country.name.common === 'Honduras' ||\n        country.name.common === 'Nicaragua' ||\n        country.name.common === 'Suriname':\n        return 6.5\n        \n      case country.name.official === 'Bonaire, Sint Eustatius and Saba' ||\n        country.name.common === 'United States Virgin Islands' ||\n        country.name.common === 'Barbados' ||\n        country.name.common === 'Saint Lucia' ||\n        country.name.common === 'Montenegro' ||\n        country.name.common === 'Saint Helena, Ascension and Tristan da Cunha':\n        return 7\n        \n      case country.name.common === 'Pitcairn' ||\n        country.name.common === 'Mayotte' ||\n        country.name.common === 'Martinique' ||\n        country.name.common === 'Guadeloupe' ||\n        country.name.common === 'Bahrain' ||\n        country.name.common === 'Réunion' ||\n        country.name.common === 'South Georgia and the South Sandwich Islands':\n        return 7.5\n        \n      case country.name.common === 'Antigua and Barbuda' ||\n        country.name.common === 'Åland Islands':\n        return 8\n        \n      case country.name.common === 'Curaçao' || country.name.common === 'Isle of Man':\n        return 9\n        \n      case country.name.common === 'Guernsey' ||\n        country.name.common === 'Jersey' ||\n        country.name.common === 'Saint Barthélemy':\n        return 10\n        \n      case country.name.common === 'Cocos (Keeling) Islands':\n        return 12\n        \n      case country.name.common === 'Nauru' || country.name.common === 'Tuvalu':\n        return 13\n        \n      case country.area < 1:\n        return 14\n        \n      case country.area > 2 && country.area < 5.9:\n        return 13\n        \n      case country.area > 5.9 && country.area < 52:\n        return 12\n        \n      case country.area > 52 && country.area < 55:\n        return 10.5\n        \n      case country.area > 55 && country.area < 179:\n        return 7\n        \n      case country.area > 179 && country.area < 40000:\n        return 6\n        \n      case country.area > 40000 && country.area < 270000:\n        return 5\n        \n      case country.area > 270000 && country.area < 9629092:\n        return 4\n        \n      case country.area > 9640010 && country.area < 10000000:\n        return 3\n        \n      default:\n        return 0\n        \n    }\n  })\n\nexport default zoomLevel","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { isIE } from 'react-device-detect'\nimport { Menu, Image, Card, Breadcrumb, Segment } from 'semantic-ui-react'\nimport { getWeather } from '../reducers/weatherReducer'\nimport { getTimeZone } from '../reducers/timeZoneReducer'\nimport {\n  resetFilter,\n  filterCountriesByRegion,\n  filterCountriesBySubRegion,\n} from '../reducers/countryReducer'\nimport zoomLevel from '../zoomLevels'\nimport loadable from '@loadable/component'\nimport Gov from '../components/WorldLeaders'\n//import Map from '../pages/Map'\nconst Map = loadable(() => import('../pages/Map'))\nconst Weather = loadable(() => import('../components/Weather'))\n\nconst Country1 = ({ data }) => {\n  const [activeTab, setActiveTab] = useState('Map')\n\n  const dispatch = useDispatch()\n\n  const unit = useSelector((state) => state.unit.unit)\n\n  const location =\n    data.capitalInfo.latlng === undefined\n      ? data.latlng\n      : data.capitalInfo.latlng\n\n  useEffect(() => {\n    dispatch(\n      getWeather({\n        location: location,\n        unit: unit,\n      })\n    )\n    dispatch(getTimeZone({ location: location }))\n  }, [unit])\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name)\n  }\n  return (\n    <>\n      <Menu id='breadcrumb' attached secondary>\n        <Breadcrumb size=\"small\">\n          <Breadcrumb.Section\n            key=\"All\"\n            link\n            onClick={() => dispatch(resetFilter())}\n          >\n            All\n          </Breadcrumb.Section>\n          <Breadcrumb.Divider icon=\"right chevron\" />\n          <Breadcrumb.Section\n            key={data.region}\n            link\n            onClick={() => dispatch(filterCountriesByRegion(data.region))}\n          >\n            {data.region}\n          </Breadcrumb.Section>\n          {data.subregion !== '' ? (\n            <>\n              <Breadcrumb.Divider icon=\"right chevron\" />\n              <Breadcrumb.Section\n                key={data.subregion}\n                link\n                onClick={() =>\n                  dispatch(filterCountriesBySubRegion(data.subregion))\n                }\n              >\n                {data.subregion}\n              </Breadcrumb.Section>\n              <Breadcrumb.Divider icon=\"right chevron\" />\n              <Breadcrumb.Section key={data.name.common} active>\n                {data.name.common}\n              </Breadcrumb.Section>\n            </>\n          ) : (\n            <></>\n          )}\n        </Breadcrumb>\n      </Menu>\n      <Menu id='country-tabs' attached pointing secondary>\n        <Menu.Item\n          name=\"Map\"\n          active={activeTab === 'Map'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"Flag\"\n          active={activeTab === 'Flag'}\n          onClick={handleTabClick}\n        />{' '}\n        <Menu.Item\n          name=\"CoatOfArms\"\n          active={activeTab === 'CoatOfArms'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"Weather\"\n          active={activeTab === 'Weather'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"Government\"\n          active={activeTab === 'Government'}\n          onClick={handleTabClick}\n        />\n      </Menu>\n      {activeTab === 'Map' ? (\n        <>\n          <Map lt={data.latlng[0]} lg={data.latlng[1]} zm={zoomLevel(data)} />\n        </>\n      ) : (\n        <></>\n      )}\n      {activeTab === 'Flag' ? (\n        <Image\n          id=\"flag\"\n          centered\n          src={isIE ? data.flags.png : data.flags.svg}\n          alt=\"country flag\"\n          size=\"medium\"\n          bordered\n        />\n      ) : (\n        <></>\n      )}\n      {activeTab === 'CoatOfArms' ? (\n        <>\n          <Segment>\n            {Object.entries(data.coatOfArms).length === 0 ? (\n              <div>No image available</div>\n            ) : (\n              <Image\n                id=\"coatOfArms\"\n                centered\n                src={data.coatOfArms.svg}\n                alt=\"coat of arms\"\n                size=\"medium\"\n                bordered\n              />\n            )}\n          </Segment>\n        </>\n      ) : (\n        <></>\n      )}\n      {activeTab === 'Weather' ? (\n        <>\n          <Card fluid>\n            <Weather country={data} />\n          </Card>\n          {/*  {!isWeatherLoading && !isLoading ? (\n            <Card fluid>\n              <Weather\n                weather={weather}\n                unit={unit}\n                activeTab={activeTab}\n                country={data}\n                timeDate={timeDate}\n              />\n            </Card>\n          ) : (\n            <Icon id=\"weather\" loading name=\"spinner\" />\n          )} */}\n        </>\n      ) : (\n        <></>\n      )}\n      {activeTab === 'Government' ? (\n        <>\n          <Card id=\"govCard\" fluid>\n            <Gov country={data} />\n          </Card>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  )\n}\n\nconst Country = React.memo(Country1)\n\nexport default Country\n"],"sourceRoot":""}