{"version":3,"sources":["reducers/weatherReducer.js","reducers/timeZoneReducer.js","App.js","store.js","index.js","reducers/countryReducer.js","services/countriesData.js"],"names":["getWeather","location","dispatch","a","countryService","weather","type","data","weatherReducer","state","action","getTimeZone","timeZone","timeZoneReducer","Countries","loadable","CountriesMobile","App","useDispatch","useEffect","initializeCountries","undefined","useSelector","countries","initialCountries","isMobile","reducer","combineReducers","countryReducer","unit","unitReducer","time","menu","menuReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","show","getAll","toggleUnit","toggleMenu","resetFilter","reset","searchCountries","input","filterCountries","country","filterCountriesByRegion","region","filterCountriesBySubRegion","subregion","noCapitals","filter","item","name","common","antarctica","c","map","capital","bouvetIsland","heardIsland","macau","usMinor","southGeorgia","frenchSouthern","otherCountries","filtered","toSearch","toLowerCase","startsWith","length","console","log","selectRegion","regionFiltered","selectSubRegion","subregionFiltered","s","newState","axios","get","response","params","res"],"mappings":"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","file":"static/js/main.26be96ff.chunk.js","sourcesContent":["import countryService from '../services/countriesData'\n\nconst weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getWeather = (location) => {\n  return async (dispatch) => {\n    const weather = await countryService.getWeather(location)\n    dispatch({\n      type: 'GET_WEATHER',\n      data: weather,\n    })\n  }\n}\n\nexport default weatherReducer\n","import countryService from '../services/countriesData'\n\nconst timeZoneReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_TIME_ZONE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getTimeZone = (location) => {\n  return async (dispatch) => {\n    const timeZone = await countryService.getTimeZone(location)\n    dispatch({\n      type: 'GET_TIME_ZONE',\n      data: timeZone,\n    })\n  }\n}\n\nexport default timeZoneReducer\n","import React, { useEffect } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport loadable from '@loadable/component'\r\nimport { initializeCountries } from './reducers/countryReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import Countries from './pages/Countries'\r\n//import CountriesMobile from './pages/CountriesMobile'\r\nconst Countries = loadable(() => import('./pages/Countries'))\r\nconst CountriesMobile = loadable(() => import('./pages/CountriesMobile'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeCountries())\r\n  }, [dispatch])\r\n\r\n  const countries = useSelector((state) => {\r\n    return state.countries.initialCountries\r\n  })\r\n\r\n  return countries !== undefined ? (\r\n    isMobile ? (\r\n      <CountriesMobile />\r\n    ) : (\r\n      <Countries />\r\n    )\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport countryReducer, {\n  unitReducer,\n  menuReducer,\n} from './reducers/countryReducer'\nimport weatherReducer from './reducers/weatherReducer'\nimport timeZoneReducer from './reducers/timeZoneReducer'\n\nconst reducer = combineReducers({\n  countries: countryReducer,\n  unit: unitReducer,\n  weather: weatherReducer,\n  time: timeZoneReducer,\n  menu: menuReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './assets/css/semantic.css'\r\nimport 'react-aspect-ratio/aspect-ratio.css'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'core-js'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//  \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\",\r\n// local proxy: \"proxy\": \"http://localhost:3001/\"\r\n// backend: https://github.com/I-keep-trying/my-app-backend\r\n","import countryService from '../services/countriesData'\n\n/* ---------- Reducers ------------- */\nconst countryReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_COUNTRIES':\n      // Find countries from restcountries.com api with missing keys\n      const noCapitals = action.data.filter(\n        (item) =>\n          item.name.common === 'Antarctica' ||\n          item.name.common === 'Bouvet Island' ||\n          item.name.common === 'Heard Island and McDonald Islands' ||\n          item.name.common === 'Macau' ||\n          item.name.common === 'United States Minor Outlying Islands' ||\n          item.name.common === 'South Georgia' ||\n          item.name.common === 'French Southern and Antarctic Lands'\n      )\n\n      // Create replacements inserting missing keys\n      const antarctica = noCapitals\n        .filter((c) => c.name.common === 'Antarctica')\n        .map((c) => {\n          return { ...c, capital: ['No Capital City'], subregion: 'Antarctic' }\n        })\n\n      const bouvetIsland = noCapitals\n        .filter((c) => c.name.common === 'Bouvet Island')\n        .map((c) => {\n          return { ...c, capital: ['Oslo'], subregion: 'Antarctic' }\n        })\n\n      const heardIsland = noCapitals\n        .filter((c) => c.name.common === 'Heard Island and McDonald Islands')\n        .map((c) => {\n          return { ...c, capital: ['Bern'], subregion: 'Antarctic' }\n        })\n\n      const macau = noCapitals\n        .filter((c) => c.name.common === 'Macau')\n        .map((c) => {\n          return { ...c, capital: ['Macau'] }\n        })\n\n      const usMinor = noCapitals\n        .filter((c) => c.name.common === 'United States Minor Outlying Islands')\n        .map((c) => {\n          return { ...c, capital: ['Washington DC'] }\n        })\n\n      const southGeorgia = noCapitals\n        .filter((c) => c.name.common === 'South Georgia')\n        .map((c) => {\n          return { ...c, subregion: 'Antarctic' }\n        })\n\n      const frenchSouthern = noCapitals\n        .filter((c) => c.name.common === 'French Southern and Antarctic Lands')\n        .map((c) => {\n          return { ...c, subregion: 'Antarctic' }\n        })\n\n      // Remove defective country objects\n      const otherCountries = action.data.filter(\n        (item) =>\n          item.name.common !== 'Antarctica' &&\n          item.name.common !== 'Bouvet Island' &&\n          item.name.common !== 'Heard Island and McDonald Islands' &&\n          item.name.common !== 'Macau' &&\n          item.name.common !== 'United States Minor Outlying Islands' &&\n          item.name.common !== 'South Georgia' &&\n          item.name.common !== 'French Southern and Antarctic Lands'\n      )\n\n      // Insert replacement objects with keys in place\n      const initialCountries = [\n        ...otherCountries,\n        southGeorgia[0],\n        heardIsland[0],\n        macau[0],\n        usMinor[0],\n        antarctica[0],\n        bouvetIsland[0],\n        frenchSouthern[0],\n      ]\n      return {\n        initialCountries,\n        filter: {\n          input: '',\n          country: '',\n          region: 'All',\n          subregion: '',\n          reset: false,\n        },\n        filtered: [],\n      }\n    case 'FILTER_COUNTRIES':\n      if (action.input === '') {\n        return {\n          ...state,\n          filter: {\n            input: '',\n            country: '',\n            region: 'All',\n            subregion: '',\n            reset: false,\n          },\n          filtered: [],\n        }\n      } else if (action.input) {\n        const toSearch = {\n          ...state,\n          filter: {\n            ...state.filter,\n            input: action.input.toLowerCase(),\n          },\n        }\n        const filtered = toSearch.initialCountries.filter((c) =>\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\n        )\n        return filtered.length === 1\n          ? {\n              ...toSearch,\n              filter: {\n                ...toSearch.filter,\n                country: filtered[0].name.common,\n                region: filtered[0].region,\n                subregion: filtered[0].subregion,\n              },\n              filtered: filtered,\n            }\n          : { ...toSearch, filtered: filtered }\n      } else if (action.country) {\n        const toSearch = {\n          ...state,\n          filter: {\n            ...state.filter,\n            country: action.country.name.common.toLowerCase(),\n            region: action.country.region,\n            subregion: action.country.subregion,\n          },\n        }\n        const filtered = toSearch.initialCountries.filter((c) =>\n          c.name.common.toLowerCase().startsWith(toSearch.filter.country)\n        )\n        return { ...toSearch, filtered: filtered }\n      } else if (action.region) {\n        console.log('action.region', action.region)\n        const selectRegion = {\n          ...state,\n          filter: { ...state.filter, region: action.region.toLowerCase() },\n        }\n\n        const regionFiltered =\n          selectRegion.filter.region === 'all'\n            ? selectRegion.initialCountries\n            : selectRegion.initialCountries.filter(\n                (c) => c.region.toLowerCase() === selectRegion.filter.region\n              )\n\n        return {\n          ...selectRegion,\n          filtered: regionFiltered,\n          filter: {\n            ...selectRegion.filter,\n            input: '',\n            country: '',\n            region: action.region.toLowerCase(),\n            subregion: '',\n          },\n        }\n      } else if (action.subregion) {\n        const selectSubRegion = {\n          ...state,\n          filter: {\n            ...state.filter,\n            subregion: action.subregion.toLowerCase(),\n          },\n        }\n        const subregionFiltered = selectSubRegion.initialCountries.filter(\n          (s) => s.subregion?.toLowerCase() === selectSubRegion.filter.subregion\n        )\n        const newState = { ...selectSubRegion, filtered: subregionFiltered }\n        return newState\n      } else {\n        return state\n      }\n\n    case 'RESET_FILTER':\n      return {\n        ...state,\n        filter: {\n          input: '',\n          country: '',\n          region: 'All',\n          subregion: '',\n          reset: true,\n        },\n        filtered: [],\n      }\n    default:\n      return state\n  }\n}\n\nexport const unitReducer = (state = { unit: 'metric' }, action) => {\n  switch (action.type) {\n    case 'UNIT_TOGGLE':\n      const unit = state.unit === 'metric' ? 'imperial' : 'metric'\n      return { ...state, unit: unit }\n    default:\n      return state\n  }\n}\n\nexport const menuReducer = (state = { show: false }, action) => {\n  switch (action.type) {\n    case 'MENU_TOGGLE':\n      const show = state.show === false ? true : false\n      return { ...state, show: show }\n    default:\n      return state\n  }\n}\n\n/* ------------ Actions ------------- */\n\nexport const initializeCountries = () => {\n  return async (dispatch) => {\n    const countries = await countryService.getAll()\n    dispatch({\n      type: 'INIT_COUNTRIES',\n      data: countries,\n    })\n  }\n}\n\nexport const toggleUnit = (unit) => {\n  return {\n    type: 'UNIT_TOGGLE',\n    unit: unit,\n  }\n}\n\nexport const toggleMenu = (show) => {\n  return {\n    type: 'MENU_TOGGLE',\n    show: show,\n  }\n}\n\nexport const resetFilter = (reset) => {\n  return {\n    type: 'RESET_FILTER',\n    reset: reset,\n  }\n}\n\nexport const searchCountries = (input) => {\n  return {\n    type: 'FILTER_COUNTRIES',\n    input,\n  }\n}\n\nexport const filterCountries = (country) => {\n  return {\n    type: 'FILTER_COUNTRIES',\n    country,\n  }\n}\n\nexport const filterCountriesByRegion = (region) => {\n  //console.log('action region', region)\n  return {\n    type: 'FILTER_COUNTRIES',\n    region,\n  }\n}\n\nexport const filterCountriesBySubRegion = (subregion) => {\n  return {\n    type: 'FILTER_COUNTRIES',\n    subregion,\n  }\n}\n\nexport default countryReducer\n","import axios from 'axios'\n\nconst baseUrl = '/api/countries'\n//const baseUrl = 'https://sheltered-scrubland-08732.herokuapp.com/api/countries'\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getWeather = async (params) => {\n  const res = await axios.get(\n    `/api/weather/lat/${params.location[0]}/lng/${params.location[1]}/unit/${params.unit}`\n  )\n  return res.data\n}\n\nconst getTimeZone = async (params) => {\n  const res = await axios.get(\n    `/api/time/lat/${params.location[0]}/lng/${params.location[1]}`\n  )\n  return res.data\n}\n\nexport default { getAll, getWeather, getTimeZone }\n"],"sourceRoot":""}