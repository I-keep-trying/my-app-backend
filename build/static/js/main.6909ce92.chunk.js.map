{"version":3,"sources":["services/notes.js","reducers/noteReducer.js","components/Notes.js","components/Header.js","components/Countries.js","reducers/filterReducer.js","components/NewNote.js","services/countries.js","reducers/countryReducer.js","App.js","store.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","createNew","content","object","important","post","noteReducer","state","action","type","id","noteToChange","find","n","changedNote","map","note","Note","handleClick","onClick","mapDispatchToProps","toggleImportanceOf","connect","filter","notes","props","HeaderNav","useRef","Menu","attached","inverted","borderless","Item","style","padding","header","Icon","className","name","color","size","Input","icon","link","position","Button","Group","Country","country","common","ConnectedCountries","countries","contextRef","length","Sticky","context","Header","i","filterReducer","createNote","dispatch","noteService","newNote","addNote","event","preventDefault","target","value","onSubmit","console","log","countryReducer","App","useDispatch","useMemo","countryService","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6909ce92.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\n//const baseUrl = 'http://localhost:3001/api/notes'\nconst baseUrl = '/api/notes'\n//const baseUrl = 'https://sheltered-scrubland-08732.herokuapp.com/api/notes'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (content) => {\n  const object = { content, important: false }\n  const response = await axios.post(baseUrl, object)\n  return response.data\n}\n\nexport default { getAll, createNew }\n","import noteService from '../services/notes'\n\nconst noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data]\n    case 'TOGGLE_IMPORTANCE': {\n      const id = action.data.id\n      const noteToChange = state.find((n) => n.id === id)\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important,\n      }\n      return state.map((note) => (note.id !== id ? note : changedNote))\n    }\n    case 'INIT_NOTES':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const createNote = (content) => {\n  return async (dispatch) => {\n    const newNote = await noteService.createNew(content)\n    dispatch({\n      type: 'NEW_NOTE',\n      data: newNote,\n    })\n  }\n}\n\nexport const toggleImportanceOf = (id) => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: { id },\n  }\n}\n\nexport const initializeNotes = () => {\n  return async (dispatch) => {\n    const notes = await noteService.getAll()\n    dispatch({\n      type: 'INIT_NOTES',\n      data: notes,\n    })\n  }\n}\n\nexport default noteReducer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleImportanceOf } from '../reducers/noteReducer'\n\nconst Note = ({ note, handleClick }) => {\n  return (\n    <li onClick={handleClick}>\n      {note.content}\n      <strong> {note.important ? 'important' : ''}</strong>\n    </li>\n  )\n}\n\nconst Notes = (props) => {\n  return (\n    <ul>\n      {props.notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n          handleClick={() => props.toggleImportanceOf(note.id)}\n        />\n      ))}\n    </ul>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  if (state.filter === 'ALL') {\n    return {\n      notes: state.notes,\n    }\n  }\n  return {\n    notes:\n      state.filter === 'IMPORTANT'\n        ? state.notes.filter((note) => note.important)\n        : state.notes.filter((note) => !note.important),\n  }\n}\n\nconst mapDispatchToProps = {\n  toggleImportanceOf,\n}\n\nconst ConnectedNotes = connect(mapStateToProps, mapDispatchToProps)(Notes)\nexport default ConnectedNotes\n","import React, { useRef } from 'react'\r\nimport { Menu, Icon, Input, Button } from 'semantic-ui-react'\r\nimport '../assets/css/App.css'\r\n\r\nconst HeaderNav = () => {\r\n  const inputRef = useRef()\r\n\r\n  /*  const clearInput = () => {\r\n    setInput('')\r\n    setRegion('All')\r\n    setActiveRegion('All')\r\n    setSubRegion('')\r\n    setActiveSubregion('')\r\n    setCountry(null)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    if (!inputRef.current) {\r\n      inputRef.current = e.target\r\n    }\r\n\r\n    //   !isLoading ? setIsLoading(true) : isLoading\r\n    setInput(e.target.value)\r\n  } */\r\n\r\n  return (\r\n    <>\r\n      <Menu id=\"nav menu\" attached=\"top\" inverted borderless>\r\n        <Menu.Item style={{ padding: 0 }} header>\r\n          <Icon className=\"App-logo\" name=\"globe\" color=\"teal\" size=\"big\" />\r\n          <p> World Countries</p>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          {' '}\r\n          <Input\r\n            icon={\r\n              <Icon\r\n                name=\"close\"\r\n                link\r\n                // onClick={clearInput}\r\n              />\r\n            }\r\n            type=\"search\"\r\n            // onChange={handleChange}\r\n          />\r\n          {/*   {input.length > 0 ? (\r\n            <Input\r\n              icon={\r\n                <Icon\r\n                  name=\"close\"\r\n                  link\r\n                  // onClick={clearInput}\r\n                />\r\n              }\r\n              type=\"search\"\r\n              value={input}\r\n              // onChange={handleChange}\r\n            />\r\n          ) : (\r\n            <Input\r\n              icon={<Icon name=\"search\" />}\r\n              type=\"search\"\r\n              value={input}\r\n              //  onChange={handleChange}\r\n              placeholder=\"Search by country name\"\r\n            />\r\n          )} */}\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Button.Group>\r\n            <Button\r\n              size=\"medium\"\r\n              //  basic={unit === 'metric' ? false : true}\r\n              inverted\r\n              color=\"teal\"\r\n              //    onClick={handleUnitButtonClick}\r\n              style={{ padding: 4 }}\r\n            >\r\n              Metric\r\n            </Button>\r\n            <Button\r\n              size=\"medium\"\r\n              //     basic={unit === 'metric' ? true : false}\r\n              inverted\r\n              color=\"teal\"\r\n              //    onClick={handleUnitButtonClick}\r\n              style={{ padding: 4 }}\r\n            >\r\n              Imperial\r\n            </Button>\r\n          </Button.Group>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeaderNav\r\n","import React, { useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { Sticky } from 'semantic-ui-react'\nimport HeaderNav from './Header'\n\nconst Country = ({ country, handleClick }) => {\n  return <li onClick={handleClick}>{country.name.common}</li>\n}\n\nconst Countries = (props) => {\n  const contextRef = useRef()\n\n  return props.countries.length > 0 ? (\n    <div>\n      <Sticky id=\"Sticky\" context={contextRef}>\n        <HeaderNav />\n        <ul>\n          {props.countries.map((country, i) => (\n            <Country\n              key={i}\n              country={country}\n              //  handleClick={() => props.toggleImportanceOf(country.id)}\n            />\n          ))}\n        </ul>\n      </Sticky>\n    </div>\n  ) : null\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    countries: state.countries,\n  }\n}\n\nconst ConnectedCountries = connect(mapStateToProps)(Countries)\n\nexport default ConnectedCountries\n","const filterReducer = (state = 'ALL', action) => {\n  switch (action.type) {\n    case 'SET_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport const filterChange = (filter) => {\n  return {\n    type: 'SET_FILTER',\n    filter,\n  }\n}\n\nexport default filterReducer\n","import React from 'react'\nimport { useDispatch, connect } from 'react-redux'\nimport { createNote } from '../reducers/noteReducer'\n\nconst NewNote = (props) => {\n\n  const addNote = async (event) => {\n    event.preventDefault()\n    const content = event.target.note.value\n    event.target.note.value = ''\n    props.createNote(content)\n  }\n\n  return (\n    <form onSubmit={addNote}>\n      <input name=\"note\" />\n      <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nexport default connect(null, { createNote })(NewNote)\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\n//const baseUrl = 'https://restcountries.com/v3.1/all'\nconst baseUrl = '/api/countries'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  console.log('response.data', response.data)\n\n  return response.data\n}\n\nexport default { getAll }\n","import countryService from '../services/countries'\n\nconst countryReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_COUNTRIES':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeCountries = () => {\n  return async (dispatch) => {\n    const countries = await countryService.getAll()\n    console.log('countries', countries)\n    dispatch({\n      type: 'INIT_COUNTRIES',\n      data: countries,\n    })\n  }\n}\n\nexport default countryReducer\n","import React, { useEffect, useMemo } from 'react'\nimport Notes from './components/Notes'\nimport Countries from './components/Countries'\nimport NewNote from './components/NewNote'\nimport VisibilityFilter from './components/VisibilityFilter'\nimport { initializeNotes } from './reducers/noteReducer'\nimport { initializeCountries } from './reducers/countryReducer'\nimport { useDispatch } from 'react-redux'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useMemo(() => {\n    dispatch(initializeCountries())\n  }, [dispatch])\n\n  return (\n    <div>\n      {/*       <NewNote />\n      <VisibilityFilter />\n      <Notes /> */}\n      <Countries />\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport noteReducer from './reducers/noteReducer'\nimport filterReducer from './reducers/filterReducer'\nimport countryReducer from './reducers/countryReducer'\n\nconst reducer = combineReducers({\n  notes: noteReducer,\n  filter: filterReducer,\n  countries: countryReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './assets/css/semantic.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n/* \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\", */\n"],"sourceRoot":""}