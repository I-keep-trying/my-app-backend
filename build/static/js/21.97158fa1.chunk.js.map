{"version":3,"sources":["pages/Map.js"],"names":["Map","lt","lg","zm","useState","map","setMap","mapUseRef","useRef","useEffect","onResize","current","getViewPort","resize","setTimeout","setZoom","setCenter","lat","lng","layers","H","service","Platform","apikey","process","createDefaultLayers","vector","normal","pixelRatio","window","devicePixelRatio","center","zoom","mapevents","Behavior","MapEvents","style","position","width","height","ref"],"mappings":"0KAqDeA,UAjDH,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GACrB,EAAsBC,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAYC,mBAoClB,OAlCAC,qBAAU,WACR,GAAKJ,EAeHK,YAASH,EAAUI,SAAS,WAC1BN,EAAIO,cAAcC,YAGpBC,YAAW,WACTT,EAAIU,QAAQZ,GACZE,EAAIW,UAAU,CAAEC,IAAKhB,EAAIiB,IAAKhB,MAC7B,SAtBK,CAER,IAGMiB,EAHW,IAAIC,IAAEC,QAAQC,SAAS,CACtCC,OAAQC,gDAEcC,sBACxBnB,EACE,IAAIc,IAAEpB,IAAIO,EAAUI,QAASQ,EAAOO,OAAOC,OAAOtB,IAAK,CACrDuB,WAAYC,OAAOC,iBACnBC,OAAQ,CAAEd,IAAKhB,EAAIiB,IAAKhB,GACxB8B,KAAM7B,QAcX,CAACE,IAEJI,qBAAU,WAEJJ,GACF,IAAIe,IAAEa,UAAUC,SAAS,IAAId,IAAEa,UAAUE,UAAU9B,MAEpD,CAACA,IAGF,mCACE,qBACE+B,MAAO,CAAEC,SAAU,WAAYC,MAAO,OAAQC,OAAQ,SACtDC,IAAKjC","file":"static/js/21.97158fa1.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport H from '@here/maps-api-for-javascript'\r\nimport onResize from 'simple-element-resize-detector'\r\n\r\nconst Map = ({ lt, lg, zm }) => {\r\n  const [map, setMap] = useState(null)\r\n\r\n  const mapUseRef = useRef()\r\n\r\n  useEffect(() => {\r\n    if (!map) {\r\n      // instantiate a platform, default layers and a map as usual\r\n      const platform = new H.service.Platform({\r\n        apikey: process.env.REACT_APP_HERE_KEY,\r\n      })\r\n      const layers = platform.createDefaultLayers()\r\n      setMap(\r\n        new H.Map(mapUseRef.current, layers.vector.normal.map, {\r\n          pixelRatio: window.devicePixelRatio,\r\n          center: { lat: lt, lng: lg },\r\n          zoom: zm,\r\n        })\r\n      )\r\n    } else {\r\n      // add resize feature\r\n      onResize(mapUseRef.current, () => {\r\n        map.getViewPort().resize()\r\n      })\r\n      // add zoom and pan\r\n      setTimeout(() => {\r\n        map.setZoom(zm)\r\n        map.setCenter({ lat: lt, lng: lg })\r\n      }, 100)\r\n    }\r\n  }, [map])\r\n\r\n  useEffect(() => {\r\n    // interactive feature i.e. scroll zoom & pan\r\n    if (map) {\r\n      new H.mapevents.Behavior(new H.mapevents.MapEvents(map))\r\n    }\r\n  }, [map])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ position: 'relative', width: '100%', height: '300px' }}\r\n        ref={mapUseRef}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Map\r\n"],"sourceRoot":""}