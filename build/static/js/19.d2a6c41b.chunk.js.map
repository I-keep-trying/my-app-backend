{"version":3,"sources":["components/HeaderMobile.js"],"names":["HeaderNav","useState","value","setValue","show","useSelector","state","menu","unit","dispatch","useDispatch","handleInput","e","preventDefault","input","target","searchCountriesByName","noMatch","countries","filtered","length","filter","clearInput","id","attached","inverted","borderless","Item","header","onClick","toggleMenu","name","color","size","Menu","position","val","toggleUnit","vertical","fluid","icon","link","type","placeholder","onChange","compact","info","Header","basic"],"mappings":"sQAyGeA,UAtFG,WAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,QAEzCE,EAAQD,aAAY,SAACC,GAAD,OAAWA,KAE/BE,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAME,KAAKA,QAEzCC,EAAWC,cAEXC,EAAc,SAACC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOb,MACvBO,EAASO,YAAsBF,IAC/BX,EAASW,IAGLG,EACgC,IAApCX,EAAMY,UAAUC,SAASC,QAAiD,KAAjCd,EAAMY,UAAUG,OAAOP,MAE5DQ,EAAa,WACjBb,EAASO,YAAsB,KAC/Bb,EAAS,KAWX,OACE,qCACE,eAAC,IAAD,CAAMoB,GAAG,kBAAkBC,SAAS,MAAMC,UAAQ,EAACC,YAAU,EAA7D,UACE,eAAC,IAAKC,KAAN,CAAWC,QAAM,EAACC,QAAS,WAV/BpB,EAASqB,gBAUL,UACG1B,EACC,cAAC,IAAD,CAAM2B,KAAK,QAAQC,MAAM,OAAOC,KAAK,UAErC,cAAC,IAAD,CAAMF,KAAK,UAAUC,MAAM,OAAOC,KAAK,UAEzC,4DAEF,cAAC,IAAKC,KAAN,CAAWC,SAAS,QAApB,SACE,cAAC,IAAKR,KAAN,CAAWE,QAAS,WAhBT,IAACO,EAClB3B,EAAS4B,YAAWD,KAed,SACE,cAAC,IAAD,CAAOJ,MAAM,OAAb,SAAqBxB,WAI3B,cAAC,IAAD,CAAMiB,UAAQ,EAACa,UAAQ,EAACC,OAAK,EAA7B,SACE,cAAC,IAAKZ,KAAN,UACE,cAAC,IAAD,CACEF,UAAQ,EACRQ,KAAK,OACLO,KACE,cAAC,IAAD,CACEC,MAAI,EACJV,KAAM7B,EAAMkB,OAAS,EAAI,QAAU,SACnCS,QAAS3B,EAAMkB,OAAS,EAAIE,EAAaX,IAG7C+B,KAAK,SACLxC,MAAOA,EACPyC,YAAY,iBACZC,SAAUjC,QAIfM,EACC,cAAC,IAAD,UACE,eAAC,IAAD,CAAS4B,SAAO,EAACC,MAAI,EAArB,UACE,cAAC,IAAQC,OAAT,4CACA,cAAC,IAAD,CAAQC,OAAK,EAAChB,MAAM,OAAOH,QAASP,EAApC,qBAMJ","file":"static/js/19.d2a6c41b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Input,\r\n  Label,\r\n  Container,\r\n  Message,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport {\r\n  toggleUnit,\r\n  toggleMenu,\r\n  searchCountriesByName,\r\n} from '../reducers/countryReducer'\r\n\r\nimport '../assets/css/App.css'\r\n\r\nconst HeaderNav = () => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const show = useSelector((state) => state.menu.show)\r\n\r\n  const state = useSelector((state) => state)\r\n\r\n  const unit = useSelector((state) => state.unit.unit)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    const input = e.target.value\r\n    dispatch(searchCountriesByName(input))\r\n    setValue(input)\r\n  }\r\n\r\n  const noMatch =\r\n    state.countries.filtered.length === 0 && state.countries.filter.input !== ''\r\n\r\n  const clearInput = () => {\r\n    dispatch(searchCountriesByName(''))\r\n    setValue('')\r\n  }\r\n\r\n  const showHideMenu = () => {\r\n    dispatch(toggleMenu())\r\n  }\r\n\r\n  const changeUnit = (val) => {\r\n    dispatch(toggleUnit(val))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu id=\"mobile nav menu\" attached=\"top\" inverted borderless>\r\n        <Menu.Item header onClick={() => showHideMenu()}>\r\n          {show ? (\r\n            <Icon name=\"times\" color=\"teal\" size=\"large\" />\r\n          ) : (\r\n            <Icon name=\"sidebar\" color=\"teal\" size=\"large\" />\r\n          )}\r\n          <p> World Countries Mobile </p>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item onClick={() => changeUnit()}>\r\n            <Label color=\"blue\">{unit}</Label>\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n      <Menu inverted vertical fluid>\r\n        <Menu.Item>\r\n          <Input\r\n            inverted\r\n            size=\"mini\"\r\n            icon={\r\n              <Icon\r\n                link\r\n                name={value.length > 0 ? 'close' : 'search'}\r\n                onClick={value.length > 0 ? clearInput : handleInput}\r\n              />\r\n            }\r\n            type=\"search\"\r\n            value={value}\r\n            placeholder=\"Search by name\"\r\n            onChange={handleInput}\r\n          />\r\n        </Menu.Item>\r\n      </Menu>\r\n      {noMatch ? (\r\n        <Container>\r\n          <Message compact info>\r\n            <Message.Header>No matches, please try again.</Message.Header>\r\n            <Button basic color=\"teal\" onClick={clearInput}>\r\n              OK\r\n            </Button>\r\n          </Message>\r\n        </Container>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeaderNav\r\n"],"sourceRoot":""}