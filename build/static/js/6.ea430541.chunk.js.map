{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/lib/eventStack/index.js","../node_modules/semantic-ui-react/dist/es/modules/Sticky/Sticky.js","pages/Countries.js"],"names":["instance","Sticky","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","active","sticky","stickyRef","createRef","triggerRef","addListeners","scrollContext","scrollContextNode","isRefObject","current","eventStack","sub","handleUpdate","target","removeListeners","unsub","update","e","pushing","ticking","assignRects","didReachStartingPoint","stickToContextTop","didTouchScreenBottom","stickToScreenBottom","stickToContextBottom","isOversized","contextRect","top","bottom","window","innerHeight","didTouchScreenTop","didReachContextBottom","stickToScreenTop","frameId","requestAnimationFrame","context","props","contextNode","document","body","triggerRect","getBoundingClientRect","stickyRect","offset","height","bottomOffset","setState","stick","bound","_invoke","unstick","_inheritsLoose","_proto","prototype","componentDidMount","isBrowser","getDerivedStateFromProps","componentDidUpdate","prevProps","prevState","componentWillUnmount","cancelAnimationFrame","computeStyle","styleElement","_this$state","_extends","undefined","width","render","_this$props","children","className","_this$state2","rest","getUnhandledProps","ElementType","getElementType","containerClasses","cx","elementClasses","triggerStyles","React","createElement","ref","style","Component","handledProps","propTypes","defaultProps","HeaderNav","loadable","Country","CountriesTable","Countries1","useState","id","region","subregions","setRegion","dispatch","useDispatch","useSelector","countriesFiltered","countries","filtered","initialCountries","contextRef","useRef","useEffect","filter","toLowerCase","reg","regions","r","data","attached","tabular","widths","continents","map","c","Item","continent","onClick","cont","filterCountriesByContinent","localStorage","clear","filterCountriesByRegion","s","i","subregion","filterCountriesBySubRegion"],"mappings":"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","file":"static/js/6.ea430541.chunk.js","sourcesContent":["import { instance } from '@semantic-ui-react/event-stack';\nexport default instance;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport { isRefObject } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { customPropTypes, eventStack, getElementType, getUnhandledProps, isBrowser } from '../../lib';\n/**\n * Sticky content stays fixed to the browser viewport while another column of content is visible on the page.\n */\n\nvar Sticky = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Sticky, _Component);\n\n  function Sticky() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      active: true,\n      sticky: false\n    };\n    _this.stickyRef = /*#__PURE__*/createRef();\n    _this.triggerRef = /*#__PURE__*/createRef();\n\n    _this.addListeners = function (scrollContext) {\n      var scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext;\n\n      if (scrollContextNode) {\n        eventStack.sub('resize', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n        eventStack.sub('scroll', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n      }\n    };\n\n    _this.removeListeners = function (scrollContext) {\n      var scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext;\n\n      if (scrollContextNode) {\n        eventStack.unsub('resize', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n        eventStack.unsub('scroll', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n      }\n    };\n\n    _this.update = function (e) {\n      var pushing = _this.state.pushing;\n      _this.ticking = false;\n\n      _this.assignRects();\n\n      if (pushing) {\n        if (_this.didReachStartingPoint()) return _this.stickToContextTop(e);\n        if (_this.didTouchScreenBottom()) return _this.stickToScreenBottom(e);\n        return _this.stickToContextBottom(e);\n      }\n\n      if (_this.isOversized()) {\n        if (_this.contextRect.top > 0) return _this.stickToContextTop(e);\n        if (_this.contextRect.bottom < window.innerHeight) return _this.stickToContextBottom(e);\n      }\n\n      if (_this.didTouchScreenTop()) {\n        if (_this.didReachContextBottom()) return _this.stickToContextBottom(e);\n        return _this.stickToScreenTop(e);\n      }\n\n      return _this.stickToContextTop(e);\n    };\n\n    _this.handleUpdate = function (e) {\n      if (!_this.ticking) {\n        _this.ticking = true;\n        _this.frameId = requestAnimationFrame(function () {\n          return _this.update(e);\n        });\n      }\n    };\n\n    _this.assignRects = function () {\n      var context = _this.props.context;\n      var contextNode = isRefObject(context) ? context.current : context || document.body;\n      _this.triggerRect = _this.triggerRef.current.getBoundingClientRect();\n      _this.contextRect = contextNode.getBoundingClientRect();\n      _this.stickyRect = _this.stickyRef.current.getBoundingClientRect();\n    };\n\n    _this.didReachContextBottom = function () {\n      var offset = _this.props.offset;\n      return _this.stickyRect.height + offset >= _this.contextRect.bottom;\n    };\n\n    _this.didReachStartingPoint = function () {\n      return _this.stickyRect.top <= _this.triggerRect.top;\n    };\n\n    _this.didTouchScreenTop = function () {\n      return _this.triggerRect.top < _this.props.offset;\n    };\n\n    _this.didTouchScreenBottom = function () {\n      var bottomOffset = _this.props.bottomOffset;\n      return _this.contextRect.bottom + bottomOffset > window.innerHeight;\n    };\n\n    _this.isOversized = function () {\n      return _this.stickyRect.height > window.innerHeight;\n    };\n\n    _this.pushing = function (pushing) {\n      var possible = _this.props.pushing;\n      if (possible) _this.setState({\n        pushing: pushing\n      });\n    };\n\n    _this.stick = function (e, bound) {\n      _this.setState({\n        bound: bound,\n        sticky: true\n      });\n\n      _invoke(_this.props, 'onStick', e, _this.props);\n    };\n\n    _this.unstick = function (e, bound) {\n      _this.setState({\n        bound: bound,\n        sticky: false\n      });\n\n      _invoke(_this.props, 'onUnstick', e, _this.props);\n    };\n\n    _this.stickToContextBottom = function (e) {\n      _invoke(_this.props, 'onBottom', e, _this.props);\n\n      _this.stick(e, true);\n\n      _this.pushing(true);\n    };\n\n    _this.stickToContextTop = function (e) {\n      _invoke(_this.props, 'onTop', e, _this.props);\n\n      _this.unstick(e, false);\n\n      _this.pushing(false);\n    };\n\n    _this.stickToScreenBottom = function (e) {\n      var bottom = _this.props.bottomOffset;\n\n      _this.stick(e, false);\n\n      _this.setState({\n        bottom: bottom,\n        top: null\n      });\n    };\n\n    _this.stickToScreenTop = function (e) {\n      var top = _this.props.offset;\n\n      _this.stick(e, false);\n\n      _this.setState({\n        top: top,\n        bottom: null\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Sticky.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (!isBrowser()) return;\n    var active = this.state.active;\n\n    if (active) {\n      this.handleUpdate();\n      this.addListeners(this.props.scrollContext);\n    }\n  };\n\n  Sticky.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (state.active !== props.active && !props.active) {\n      return {\n        active: props.active,\n        sticky: false\n      };\n    }\n\n    return {\n      active: props.active\n    };\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.active === this.state.active) {\n      if (prevProps.scrollContext !== this.props.scrollContext) {\n        this.removeListeners(prevProps.scrollContext);\n        this.addListeners(this.props.scrollContext);\n      }\n\n      return;\n    }\n\n    if (this.state.active) {\n      this.handleUpdate();\n      this.addListeners(this.props.scrollContext);\n      return;\n    }\n\n    this.removeListeners(prevProps.scrollContext);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (!isBrowser()) return;\n    var active = this.state.active;\n\n    if (active) {\n      this.removeListeners(this.props.scrollContext);\n      cancelAnimationFrame(this.frameId);\n    }\n  } // ----------------------------------------\n  // Events\n  // ----------------------------------------\n  ;\n\n  _proto.computeStyle = function computeStyle() {\n    var styleElement = this.props.styleElement;\n    var _this$state = this.state,\n        bottom = _this$state.bottom,\n        bound = _this$state.bound,\n        sticky = _this$state.sticky,\n        top = _this$state.top;\n    if (!sticky) return styleElement;\n    return _extends({\n      bottom: bound ? 0 : bottom,\n      top: bound ? undefined : top,\n      width: this.triggerRect.width\n    }, styleElement);\n  } // Return true when the component reached the bottom of the context\n  ;\n\n  // ----------------------------------------\n  // Render\n  // ----------------------------------------\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className;\n    var _this$state2 = this.state,\n        bottom = _this$state2.bottom,\n        bound = _this$state2.bound,\n        sticky = _this$state2.sticky;\n    var rest = getUnhandledProps(Sticky, this.props);\n    var ElementType = getElementType(Sticky, this.props);\n    var containerClasses = cx(sticky && 'ui', sticky && 'stuck-container', sticky && (bound ? 'bound-container' : 'fixed-container'), className);\n    var elementClasses = cx('ui', sticky && (bound ? 'bound bottom' : 'fixed'), sticky && !bound && (bottom === null ? 'top' : 'bottom'), 'sticky');\n    var triggerStyles = sticky && this.stickyRect ? {\n      height: this.stickyRect.height\n    } : {};\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: containerClasses\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.triggerRef,\n      style: triggerStyles\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: elementClasses,\n      ref: this.stickyRef,\n      style: this.computeStyle()\n    }, children));\n  };\n\n  return Sticky;\n}(Component);\n\nSticky.handledProps = [\"active\", \"as\", \"bottomOffset\", \"children\", \"className\", \"context\", \"offset\", \"onBottom\", \"onStick\", \"onTop\", \"onUnstick\", \"pushing\", \"scrollContext\", \"styleElement\"];\nexport { Sticky as default };\nSticky.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Sticky can be active. */\n  active: PropTypes.bool,\n\n  /** Offset in pixels from the bottom of the screen when fixing element to viewport. */\n  bottomOffset: PropTypes.number,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Context which sticky element should stick to. */\n  context: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject]),\n\n  /** Offset in pixels from the top of the screen when fixing element to viewport. */\n  offset: PropTypes.number,\n\n  /**\n   * Callback when element is bound to bottom of parent container.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onBottom: PropTypes.func,\n\n  /**\n   * Callback when element is fixed to page.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onStick: PropTypes.func,\n\n  /**\n   * Callback when element is bound to top of parent container.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onTop: PropTypes.func,\n\n  /**\n   * Callback when element is unfixed from page.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onUnstick: PropTypes.func,\n\n  /** Whether element should be \"pushed\" by the viewport, attaching to the bottom of the screen when scrolling up. */\n  pushing: PropTypes.bool,\n\n  /** Context which sticky should attach onscroll events. */\n  scrollContext: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject]),\n\n  /** Custom style for sticky element. */\n  styleElement: PropTypes.object\n} : {};\nSticky.defaultProps = {\n  active: true,\n  bottomOffset: 0,\n  offset: 0,\n  scrollContext: isBrowser() ? window : null\n};","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Sticky, Menu } from 'semantic-ui-react'\r\nimport loadable from '@loadable/component'\r\nimport {\r\n  filterCountriesByContinent,\r\n  filterCountriesByRegion,\r\n  filterCountriesBySubRegion,\r\n} from '../reducers/countryReducer'\r\nimport continents from '../continents'\r\nimport regions from '../regions'\r\nimport '../App1.css'\r\nconst HeaderNav = loadable(() => import('../components/Header'))\r\nconst Country = loadable(() => import('./Country'))\r\nconst CountriesTable = loadable(() => import('../components/Table'))\r\n\r\nconst Countries1 = () => {\r\n  // 'useState' region/subregion is only being used to identify menu active tab\r\n  const [region, setRegion] = useState({\r\n    id: 'FZUe47mEY9PCOzYmMxzYY',\r\n    region: 'All',\r\n    subregions: [],\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const state = useSelector((state) => state)\r\n\r\n  const countriesFiltered = useSelector((state) => {\r\n    return state.countries.filtered.length > 0\r\n      ? state.countries.filtered\r\n      : state.countries.initialCountries\r\n  })\r\n\r\n  const handleContinentClick = (cont) => {\r\n    dispatch(filterCountriesByContinent(cont.continent))\r\n    if (cont.continent === 'All') {\r\n      window.localStorage.clear()\r\n    }\r\n  }\r\n\r\n  const handleRegionClick = (reg) => {\r\n    dispatch(filterCountriesByRegion(reg.region))\r\n    setRegion(reg)\r\n    if (reg.region === 'All') {\r\n      window.localStorage.clear()\r\n    }\r\n  }\r\n\r\n  const handleSubregionClick = (sub) => {\r\n    dispatch(filterCountriesBySubRegion(sub))\r\n  }\r\n\r\n  const contextRef = useRef()\r\n\r\n  useEffect(() => {\r\n    if (\r\n      state.countries.filter.region.toLowerCase() !==\r\n      region.region.toLowerCase()\r\n    ) {\r\n      const reg = regions.filter((r) =>\r\n        r.region.toLowerCase() === state.countries.filter.region.toLowerCase()\r\n          ? r\r\n          : null\r\n      )\r\n      setRegion(reg[0])\r\n    } else {\r\n      return region\r\n    }\r\n  }, [state])\r\n\r\n  return (\r\n    <div id=\"ref\" ref={contextRef}>\r\n      <Sticky id=\"Sticky\" context={contextRef}>\r\n        <HeaderNav />\r\n        {countriesFiltered.length === 1 ? (\r\n          <Country data={countriesFiltered[0]} />\r\n        ) : (\r\n          <>\r\n            <Menu attached=\"top\" tabular widths={8}>\r\n              {continents.map((c) => (\r\n                <Menu.Item\r\n                  key={c.id}\r\n                  active={\r\n                    state.countries.filter.continent.toLowerCase() ===\r\n                    c.continent.toLowerCase()\r\n                  }\r\n                  onClick={() => handleContinentClick(c)}\r\n                >\r\n                  {c.continent === 'All' ? 'All Continents' : c.continent}\r\n                </Menu.Item>\r\n              ))}\r\n            </Menu>\r\n            <Menu attached tabular widths={7}>\r\n              {regions.map((r) => (\r\n                <Menu.Item\r\n                  key={r.id}\r\n                  active={\r\n                    state.countries.filter.region.toLowerCase() ===\r\n                    r.region.toLowerCase()\r\n                  }\r\n                  onClick={() => handleRegionClick(r)}\r\n                >\r\n                  {r.region === 'All' ? 'All Regions' : r.region}\r\n                </Menu.Item>\r\n              ))}\r\n            </Menu>\r\n            {state.countries.filter.region.toLowerCase() !== 'all' ? (\r\n              <>\r\n                <Menu widths={region.subregions.length} attached tabular>\r\n                  {region.subregions.map((s, i) => (\r\n                    <Menu.Item\r\n                      key={i}\r\n                      active={\r\n                        state.countries.filter.subregion.toLowerCase() ===\r\n                        s.toLowerCase()\r\n                      }\r\n                      onClick={() => handleSubregionClick(s)}\r\n                    >\r\n                      {s}\r\n                    </Menu.Item>\r\n                  ))}\r\n                </Menu>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </>\r\n        )}\r\n      </Sticky>\r\n      <CountriesTable />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countries1\r\n"],"sourceRoot":""}