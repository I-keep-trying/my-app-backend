{"version":3,"sources":["components/Weather.js"],"names":["WeatherWidget1","country","useState","timeDate","setTimeDate","unit","useSelector","state","weather","timeZone","time","useMemo","d","Date","options","weekday","year","month","day","hour","minute","zoneName","timeZoneName","toLocaleString","window","navigator","language","code","current","icon","Images","path","isMobile","isTablet","className","capital","description","src","width","height","alt","name","Math","round","temp","colSpan","feels_like","clouds","wind_speed","humidity","pressure","href","target","rel","moment","unix","dt","format","floated","common","id","daily","map","i","fill","x","y","textAnchor","max","min","WeatherWidget","React","memo"],"mappings":"yOASA,SAASA,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACxB,EAAgCC,mBAAS,mBAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,KAAKA,QAEzCG,EAAUF,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAEvCC,EAAWH,aAAY,SAACC,GAAD,OAAWA,EAAMG,QAE9CC,mBAAQ,WACN,IAAMC,EAAI,IAAIC,KACRC,EAAU,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRX,SAAUA,EAASY,SACnBC,aAAc,SAEhBlB,EAAYQ,EAAEW,eAAeC,OAAOC,UAAUC,SAAUZ,MACvD,IAEH,IAAMa,EAAOnB,EAAQoB,QAAQpB,QAAQ,GAAGqB,KAClCA,EAAOC,IAAOH,GAAMI,KAE1B,OAAOC,YAAYC,WACjB,sBAAKC,UAAU,uDAAf,UACE,qBAAKA,UAAU,kDAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,gCACE,qBAAIA,UAAU,sBAAd,8BACoBjC,EAAQkC,QAAS,OAErC,kCAAKhC,EAAL,cAIN,sBAAK+B,UAAU,kDAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,gCACE,oBAAIA,UAAU,sBAAd,eACA,8BAAI1B,EAAQoB,QAAQpB,QAAQ,GAAG4B,YAA/B,YAGJ,qBACEC,IAAKR,EACLS,MAAM,MACNC,OAAO,MACPC,IAAG,qBAAgBvC,EAAQwC,MAC3BP,UAAU,2BAGd,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,mCAAf,UACGQ,KAAKC,MAAMnC,EAAQoB,QAAQgB,MAC5B,wCAAiB,WAATvC,EAAoB,IAAM,UAEpC,8BACE,qBAAK6B,UAAU,qBAAf,SACE,uBAAOA,UAAU,uBAAjB,SACE,kCACE,oBAAIA,UAAU,uBAAd,SACE,oBAAIW,QAAQ,IAAIX,UAAU,sBAA1B,uBAIF,qBAAIA,UAAU,uBAAd,UACE,oBAAIA,UAAU,sBAAd,wBACA,qBAAIA,UAAU,sBAAd,UACGQ,KAAKC,MAAMnC,EAAQoB,QAAQkB,YAC5B,wCAAiB,WAATzC,EAAoB,IAAM,aAGtC,qBAAI6B,UAAU,uBAAd,UACE,oBAAIA,UAAU,sBAAd,oBACA,qBAAIA,UAAU,sBAAd,UACG1B,EAAQoB,QAAQmB,OACjB,2CAGJ,qBAAIb,UAAU,uBAAd,UACE,oBAAIA,UAAU,sBAAd,kBACA,qBAAIA,UAAU,sBAAd,UACGQ,KAAKC,MAAMnC,EAAQoB,QAAQoB,YAClB,WAAT3C,EAAoB,MAAQ,YAGjC,qBAAI6B,UAAU,4BAAd,UACE,oBAAIA,UAAU,sBAAd,sBACA,qBAAIA,UAAU,sBAAd,UACG1B,EAAQoB,QAAQqB,SADnB,UAIF,qBAAIf,UAAU,4BAAd,UACE,oBAAIA,UAAU,sBAAd,sBACA,qBAAIA,UAAU,sBAAd,UACG1B,EAAQoB,QAAQsB,SADnB,2BAUd,qBAAKhB,UAAU,kDAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,mBACEiB,KAAK,8BACLC,OAAO,SACPC,IAAI,aAHN,SAKE,qBAAKnB,UAAU,qCAEjB,qBAAKA,UAAU,qBAAf,SACGoB,IAAOC,KAAK/C,EAAQoB,QAAQ4B,IAAIC,OAAO,gCAMhD,gCACE,qBAAKvB,UAAU,2CAAf,SACE,qBAAKA,UAAU,2BAAf,SACE,2DAA8BjC,EAAQkC,QAAQ,UAGlD,cAAC,IAAD,CAASuB,QAAQ,OAAjB,SACE,sBAAMxB,UAAU,iBAAhB,SAAkC/B,MAEpC,qBAAK+B,UAAU,2CAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,oBAAIA,UAAU,2BAAd,SAA0CjC,EAAQkC,QAAQ,KAE1D,mBACEgB,KAAK,8BACLC,OAAO,SACPC,IAAI,aAHN,SAKE,qBAAKnB,UAAU,wCAIrB,gCACE,eAAC,IAAD,CAASwB,QAAQ,OAAjB,UACE,qBAAKxB,UAAU,0BAAf,SACE,mBAAGA,UAAU,2BAAb,kCAEF,sBAAKA,UAAU,0BAAf,UACE,qBACEG,IAAKR,EACLW,IAAG,qBAAgBvC,EAAQwC,KAAKkB,QAChCzB,UAAU,2BAEZ,qBAAKA,UAAU,yBAAf,SACE,oBAAGA,UAAU,4BAAb,UACGQ,KAAKC,MAAMnC,EAAQoB,QAAQgB,MAC5B,wCAAiB,WAATvC,EAAoB,IAAM,eAIxC,sBAAK6B,UAAU,0BAAf,UACE,mBAAGA,UAAU,2BAAb,SACG1B,EAAQoB,QAAQpB,QAAQ,GAAG4B,cAE9B,oBAAGF,UAAU,0BAAb,mBACSQ,KAAKC,MAAMnC,EAAQoB,QAAQoB,YACxB,WAAT3C,EAAoB,OAAS,gBAKpC,eAAC,IAAD,CAASuD,GAAG,UAAUF,QAAQ,QAA9B,UACE,qBAAKxB,UAAU,2BAAf,sBACA,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,WAAd,SACG1B,EAAQqD,MAAMC,KAAI,SAAClD,EAAGmD,GACrB,OACE,qBAAY7B,UAAU,iBAAtB,UACGoB,IAAOC,KAAK/C,EAAQoB,QAAQ4B,IAAIC,OAAO,WACxCH,IAAOC,KAAK3C,EAAE4C,IAAIC,OAAO,SACrB,QACAH,IAAOC,KAAK3C,EAAE4C,IAAIC,OAAO,OAC7B,uBALF,IAKUH,IAAOC,KAAK3C,EAAE4C,IAAIC,OAAO,SACjC,qBACEpB,IAAG,2CAAsCzB,EAAEJ,QAAQ,GAAGqB,KAAnD,QACHS,MAAM,KACNC,OAAO,KACPC,IAAKc,IAAOC,KAAK3C,EAAE4C,IAAIC,OAAO,WAVzBM,QAgBf,qBAAKH,GAAG,WAAW1B,UAAU,uBAA7B,SACE,sBAAKA,UAAU,OAAOI,MAAM,MAAMC,OAAO,KAAKyB,KAAK,UAAnD,UACE,4BACE,sBAAMpD,EAAE,giBAGV,uBAAMqD,EAAE,KAAKC,EAAE,qBAAqBC,WAAW,SAA/C,UACGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KADpC,UAGA,uBAAMH,EAAE,KAAKC,EAAE,oBAAoBC,WAAW,SAA9C,UACGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KADpC,UAIA,uBACEJ,EAAE,oBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KALpC,UAOA,uBACEH,EAAE,oBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KALpC,UAQA,uBACEJ,EAAE,qBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KALpC,UAOA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KALpC,UAQA,uBACEJ,EAAE,qBACFC,EAAE,qBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KALpC,UAOA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KALpC,UAQA,uBACEJ,EAAE,qBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KALpC,UAOA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KALpC,UAQA,uBACEJ,EAAE,oBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KALpC,UAOA,uBACEH,EAAE,oBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KALpC,UAQA,uBAAMJ,EAAE,qBAAqBC,EAAE,KAAKC,WAAW,SAA/C,UACGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KADpC,UAGA,uBACEH,EAAE,qBACFC,EAAE,oBACFC,WAAW,SAHb,UAKGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KALpC,UAQA,uBAAMJ,EAAE,MAAMC,EAAE,qBAAqBC,WAAW,SAAhD,UACGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKwB,KADpC,UAGA,uBAAMH,EAAE,MAAMC,EAAE,oBAAoBC,WAAW,SAA/C,UACGzB,KAAKC,MAAMnC,EAAQqD,MAAM,GAAGjB,KAAKyB,KADpC,2BAYhB,IAAMC,EAAgBC,IAAMC,KAAKxE,GAElBsE","file":"static/js/22.d49401a3.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { isMobile, isTablet } from 'react-device-detect'\r\nimport { Segment } from 'semantic-ui-react'\r\nimport moment from 'moment'\r\nimport Images from '../assets/images/weather-animated/index'\r\nimport '../assets/css/owm-left.css'\r\nimport '../assets/css/owm-right.css'\r\n\r\nfunction WeatherWidget1({ country }) {\r\n  const [timeDate, setTimeDate] = useState('time zone error')\r\n\r\n  const unit = useSelector((state) => state.unit.unit)\r\n\r\n  const weather = useSelector((state) => state.weather)\r\n\r\n  const timeZone = useSelector((state) => state.time)\r\n\r\n  useMemo(() => {\r\n    const d = new Date()\r\n    const options = {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      timeZone: timeZone.zoneName,\r\n      timeZoneName: 'short',\r\n    }\r\n    setTimeDate(d.toLocaleString(window.navigator.language, options))\r\n  }, [])\r\n\r\n  const code = weather.current.weather[0].icon\r\n  const icon = Images[code].path\r\n\r\n  return isMobile || isTablet ? (\r\n    <div className=\"widget-right weather-right--type1 widget-right--blue\">\r\n      <div className=\"widget-right__header widget-right__header--blue\">\r\n        <div className=\"widget-right__layout\">\r\n          <div>\r\n            <h2 className=\"widget-right__title\">\r\n              Date and Time in {country.capital}{' '}\r\n            </h2>\r\n            <p> {timeDate} </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"widget-right__header widget-right__header--blue\">\r\n        <div className=\"widget-right__layout\">\r\n          <div>\r\n            <h2 className=\"widget-right__title\"> </h2>\r\n            <p>{weather.current.weather[0].description} </p>\r\n          </div>\r\n        </div>\r\n        <img\r\n          src={icon}\r\n          width=\"128\"\r\n          height=\"128\"\r\n          alt={`Weather in ${country.name}`}\r\n          className=\"weather-right__icon\"\r\n        />\r\n      </div>\r\n      <div className=\"weather-right weather-right--blue\">\r\n        <div className=\"weather-right__layout\">\r\n          <div className=\"weather-right__temperatureMobile\">\r\n            {Math.round(weather.current.temp)}\r\n            <span>°{unit === 'metric' ? 'C' : 'F'}</span>\r\n          </div>\r\n          <div>\r\n            <div className=\"weather-right-card\">\r\n              <table className=\"weather-right__table\">\r\n                <tbody>\r\n                  <tr className=\"weather-right__items\">\r\n                    <th colSpan=\"2\" className=\"weather-right__item\">\r\n                      Details\r\n                    </th>\r\n                  </tr>\r\n                  <tr className=\"weather-right__items\">\r\n                    <td className=\"weather-right__item\">Feels like</td>\r\n                    <td className=\"weather-right__item\">\r\n                      {Math.round(weather.current.feels_like)}\r\n                      <span>°{unit === 'metric' ? 'C' : 'F'}</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr className=\"weather-right__items\">\r\n                    <td className=\"weather-right__item\">Clouds</td>\r\n                    <td className=\"weather-right__item\">\r\n                      {weather.current.clouds}\r\n                      <span>%</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr className=\"weather-right__items\">\r\n                    <td className=\"weather-right__item\">Wind</td>\r\n                    <td className=\"weather-right__item\">\r\n                      {Math.round(weather.current.wind_speed)}\r\n                      {unit === 'metric' ? 'm/s' : 'mph'}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className=\"weather-right-card__items\">\r\n                    <td className=\"weather-right__item\">Humidity</td>\r\n                    <td className=\"weather-right__item\">\r\n                      {weather.current.humidity}%\r\n                    </td>\r\n                  </tr>\r\n                  <tr className=\"weather-right-card__items\">\r\n                    <td className=\"weather-right__item\">Pressure</td>\r\n                    <td className=\"weather-right__item\">\r\n                      {weather.current.pressure} hPa\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"widget-right__footer widget-right__footer--blue\">\r\n        <div className=\"widget-right__layout\">\r\n          <a\r\n            href=\"https://openweathermap.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <div className=\"widget-right__logo_black_small\"></div>\r\n          </a>\r\n          <div className=\"widget-right__date\">\r\n            {moment.unix(weather.current.dt).format('YYYY-MM-DD, h:mm a')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <div className=\"widget-left-menu widget-left-menu--brown\">\r\n        <div className=\"widget-left-menu__layout\">\r\n          <h3>Current Date and Time in {country.capital[0]}</h3>\r\n        </div>\r\n      </div>\r\n      <Segment floated=\"left\">\r\n        <span className=\"calendar__item\">{timeDate}</span>\r\n      </Segment>\r\n      <div className=\"widget-left-menu widget-left-menu--brown\">\r\n        <div className=\"widget-left-menu__layout\">\r\n          <h2 className=\"widget-left-menu__header\">{country.capital[0]}</h2>\r\n\r\n          <a\r\n            href=\"https://openweathermap.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <div className=\"widget-left-menu__logo_black\"></div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Segment floated=\"left\">\r\n          <div className=\"weather-left-card__row2\">\r\n            <p className=\"weather-left-card__means\">Current Conditions</p>\r\n          </div>\r\n          <div className=\"weather-left-card__row1\">\r\n            <img\r\n              src={icon}\r\n              alt={`Weather in ${country.name.common}`}\r\n              className=\"weather-left-card__img\"\r\n            />\r\n            <div className=\"weather-left-card__col\">\r\n              <p className=\"weather-left-card__number\">\r\n                {Math.round(weather.current.temp)}\r\n                <span>°{unit === 'metric' ? 'C' : 'F'}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"weather-left-card__row2\">\r\n            <p className=\"weather-left-card__means\">\r\n              {weather.current.weather[0].description}\r\n            </p>\r\n            <p className=\"weather-left-card__wind\">\r\n              Wind: {Math.round(weather.current.wind_speed)}\r\n              {unit === 'metric' ? ' m/s' : ' mph'}\r\n            </p>\r\n          </div>\r\n        </Segment>\r\n\r\n        <Segment id=\"weather\" floated=\"right\">\r\n          <div className=\"weather-left-card__means\">Forecast</div>\r\n          <div className=\"widget-left__calendar\">\r\n            <ul className=\"calendar\">\r\n              {weather.daily.map((d, i) => {\r\n                return (\r\n                  <li key={i} className=\"calendar__item\">\r\n                    {moment.unix(weather.current.dt).format('MMM D') ===\r\n                    moment.unix(d.dt).format('MMM D')\r\n                      ? 'Today'\r\n                      : moment.unix(d.dt).format('ddd')}\r\n                    <br /> {moment.unix(d.dt).format('MMM D')}\r\n                    <img\r\n                      src={`https://openweathermap.org/img/w/${d.weather[0].icon}.png`}\r\n                      width=\"32\"\r\n                      height=\"32\"\r\n                      alt={moment.unix(d.dt).format('ddd')}\r\n                    />\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            <div id=\"graphic2\" className=\"widget-left__graphic\">\r\n              <svg className=\"axis\" width=\"420\" height=\"79\" fill=\"#FEB020\">\r\n                <g>\r\n                  <path d=\"M15,23.615384615384613L72.14285714285714,30.42307692307692L129.28571428571428,30.42307692307692L186.42857142857142,21.346153846153847L243.57142857142856,41.76923076923077L300.7142857142857,44.03846153846154L357.85714285714283,39.5L415,34.96153846153847L415,53.11538461538461L357.85714285714283,53.11538461538461L300.7142857142857,57.65384615384615L243.57142857142856,53.11538461538461L186.42857142857142,48.57692307692308L129.28571428571428,50.84615384615385L72.14285714285714,50.84615384615385L15,44.03846153846154L15,23.615384615384613\"></path>\r\n                </g>\r\n\r\n                <text x=\"15\" y=\"19.115384615384613\" textAnchor=\"middle\">\r\n                  {Math.round(weather.daily[0].temp.max)}°\r\n                </text>\r\n                <text x=\"15\" y=\"61.03846153846154\" textAnchor=\"middle\">\r\n                  {Math.round(weather.daily[0].temp.min)}°\r\n                </text>\r\n\r\n                <text\r\n                  x=\"72.14285714285714\"\r\n                  y=\"25.92307692307692\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[1].temp.max)}°\r\n                </text>\r\n                <text\r\n                  x=\"72.14285714285714\"\r\n                  y=\"67.84615384615384\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[1].temp.min)}°\r\n                </text>\r\n\r\n                <text\r\n                  x=\"129.28571428571428\"\r\n                  y=\"25.92307692307692\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[2].temp.max)}°\r\n                </text>\r\n                <text\r\n                  x=\"129.28571428571428\"\r\n                  y=\"67.84615384615384\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[2].temp.min)}°\r\n                </text>\r\n\r\n                <text\r\n                  x=\"186.42857142857142\"\r\n                  y=\"16.846153846153847\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[3].temp.max)}°\r\n                </text>\r\n                <text\r\n                  x=\"186.42857142857142\"\r\n                  y=\"65.57692307692308\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[3].temp.min)}°\r\n                </text>\r\n\r\n                <text\r\n                  x=\"243.57142857142856\"\r\n                  y=\"37.26923076923077\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[4].temp.max)}°\r\n                </text>\r\n                <text\r\n                  x=\"243.57142857142856\"\r\n                  y=\"70.11538461538461\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[4].temp.min)}°\r\n                </text>\r\n\r\n                <text\r\n                  x=\"300.7142857142857\"\r\n                  y=\"39.53846153846154\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[5].temp.max)}°\r\n                </text>\r\n                <text\r\n                  x=\"300.7142857142857\"\r\n                  y=\"74.65384615384616\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[5].temp.min)}°\r\n                </text>\r\n\r\n                <text x=\"357.85714285714283\" y=\"35\" textAnchor=\"middle\">\r\n                  {Math.round(weather.daily[6].temp.max)}°\r\n                </text>\r\n                <text\r\n                  x=\"357.85714285714283\"\r\n                  y=\"70.11538461538461\"\r\n                  textAnchor=\"middle\"\r\n                >\r\n                  {Math.round(weather.daily[6].temp.min)}°\r\n                </text>\r\n\r\n                <text x=\"415\" y=\"30.461538461538467\" textAnchor=\"middle\">\r\n                  {Math.round(weather.daily[7].temp.max)}°\r\n                </text>\r\n                <text x=\"415\" y=\"70.11538461538461\" textAnchor=\"middle\">\r\n                  {Math.round(weather.daily[7].temp.min)}°\r\n                </text>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </Segment>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst WeatherWidget = React.memo(WeatherWidget1)\r\n\r\nexport default WeatherWidget\r\n"],"sourceRoot":""}