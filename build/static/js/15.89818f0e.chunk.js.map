{"version":3,"sources":["pages/CountriesMobile.js"],"names":["Country","loadable","MobileNav","CountriesTableMobile","CountriesMenuMobile","Countries","dispatch","useDispatch","show","useSelector","state","menu","countriesFiltered","countries","filtered","length","initialCountries","contextRef","useRef","id","ref","context","compact","info","Header","basic","color","onClick","resetFilter","data"],"mappings":"2IAAA,gGAOMA,EAAUC,aAAS,kBAAM,+DACzBC,EAAYD,aAAS,kBAAM,wDAC3BE,EAAuBF,aAAS,kBAAM,wDACtCG,EAAsBH,aAAS,kBAAM,wDAiD5BI,UA/CG,WAChB,IAAMC,EAAWC,cAEXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,QAEzCI,EAAoBH,aAAY,SAACC,GACrC,OAAOA,EAAMG,UAAUC,SAASC,OAAS,EACrCL,EAAMG,UAAUC,SAChBJ,EAAMG,UAAUG,oBAOhBC,EAAaC,mBAEnB,OACE,mCACE,sBAAKC,GAAG,MAAMC,IAAKH,EAAnB,UACE,eAAC,IAAD,CAAQE,GAAG,SAASE,QAASJ,EAA7B,UACE,cAACf,EAAD,IAC8B,IAA7BU,EAAkBG,OACjB,cAAC,IAAD,UACE,eAAC,IAAD,CAASO,SAAO,EAACC,MAAI,EAArB,UACE,cAAC,IAAQC,OAAT,4CACA,cAAC,IAAD,CAAQC,OAAK,EAACC,MAAM,OAAOC,QAf3B,WACZrB,EAASsB,gBAcG,qBAMJ,mCACgC,IAA7BhB,EAAkBG,OACjB,cAACf,EAAD,CAAS6B,KAAMjB,EAAkB,KAEjC,mCAAGJ,EAAO,cAACJ,EAAD,IAA0B,oCAK5C,cAACD,EAAD","file":"static/js/15.89818f0e.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Sticky, Container, Message, Button } from 'semantic-ui-react'\r\nimport { resetFilter } from '../reducers/countryReducer'\r\nimport '../App1.css'\r\nimport loadable from '@loadable/component'\r\n\r\nconst Country = loadable(() => import('./Country'))\r\nconst MobileNav = loadable(() => import('../components/HeaderMobile'))\r\nconst CountriesTableMobile = loadable(() => import('../components/TableMobile'))\r\nconst CountriesMenuMobile = loadable(() => import('../components/MenuMobile'))\r\n\r\nconst Countries = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const show = useSelector((state) => state.menu.show)\r\n\r\n  const countriesFiltered = useSelector((state) => {\r\n    return state.countries.filtered.length > 0\r\n      ? state.countries.filtered\r\n      : state.countries.initialCountries\r\n  })\r\n\r\n  const reset = () => {\r\n    dispatch(resetFilter())\r\n  }\r\n\r\n  const contextRef = useRef()\r\n\r\n  return (\r\n    <>\r\n      <div id=\"ref\" ref={contextRef}>\r\n        <Sticky id=\"Sticky\" context={contextRef}>\r\n          <MobileNav />\r\n          {countriesFiltered.length === 0 ? (\r\n            <Container>\r\n              <Message compact info>\r\n                <Message.Header>No matches, please try again.</Message.Header>\r\n                <Button basic color=\"teal\" onClick={reset}>\r\n                  OK\r\n                </Button>\r\n              </Message>\r\n            </Container>\r\n          ) : (\r\n            <>\r\n              {countriesFiltered.length === 1 ? (\r\n                <Country data={countriesFiltered[0]} />\r\n              ) : (\r\n                <>{show ? <CountriesMenuMobile /> : <></>}</>\r\n              )}\r\n            </>\r\n          )}\r\n        </Sticky>\r\n        <CountriesTableMobile />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Countries\r\n"],"sourceRoot":""}