{"version":3,"sources":["reducers/countryNewsReducer.js","reducers/countryDataReducer.js","reducers/weatherReducer.js","reducers/timeZoneReducer.js","services/countriesData.js","App.js","store.js","index.js","reducers/countriesReducer.js"],"names":["initialState","news","status","totalResults","articles","bbox","featuresDetails","getCountryNews","country","dispatch","a","countryService","countryData","type","data","countryNewsReducer","state","action","toString","includes","getCountryBbox","countryBbox","getCountryFeatures","location","countryFeatures","countryDataReducer","features","featureArr","map","f","properties","place_id","featureIds","getWeather","weather","weatherReducer","getTimeZone","timeZone","timeZoneReducer","getAll","axios","get","response","params","unit","res","getCountry","getCountryFeatureDetails","Countries","loadable","CountriesMobile","App","useDispatch","countries","useSelector","initialCountries","useEffect","undefined","initializeCountries","isMobile","reducer","combineReducers","countriesReducer","unitReducer","time","menu","menuReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","searchCountriesByName","input","sortCountries","key","selectCountry","filterCountriesByRegion","region","filterCountriesBySubRegion","subregion","toggleUnit","show","console","log","noCapitals","filter","item","name","common","antarctica","c","capital","bouvetIsland","heardIsland","macau","usMinor","southGeorgia","frenchSouthern","otherCountries","nCountries","b","window","localStorage","getItem","dir","localeCompare","sort","id","subregions","reset","filtered","sortConfig","direction","toSearch","toLowerCase","startsWith","length","reg","regions","r","selectRegion","regionFiltered","subregionFiltered","newState","setItem","sortableItems","sortedState"],"mappings":"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","file":"static/js/main.60dace37.chunk.js","sourcesContent":["import countryService from '../services/countriesData'\n\nconst initialState = {\n  news: { status: '?', totalResults: 0, articles: [] },\n  bbox: [],\n  featuresDetails: [],\n}\n\nconst countryNewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'COUNTRY_NEWS':\n      if (action.data.toString().includes('Error')) {\n        return { data: 'no news available' }\n      } else {\n        return { ...state, news: action.data }\n      }\n    default:\n      return state\n  }\n}\n\nexport const getCountryNews = (country) => {\n  return async (dispatch) => {\n    const countryData = await countryService.getCountryNews(country)\n    dispatch({\n      type: 'COUNTRY_NEWS',\n      data: countryData,\n    })\n  }\n}\n\nexport default countryNewsReducer\n","import countryService from '../services/countriesData'\n\nconst initialState = {\n  bbox: [],\n  featuresDetails: [],\n}\n\nconst countryDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'COUNTRY_BBOX':\n      return { ...state, bbox: action.data }\n    case 'COUNTRY_FEATURES':\n      const features = action.data.features\n      const featureArr = features.map((f) => {\n        return f.properties.place_id\n      })\n      return { ...state, features: action.data, featureIds: featureArr }\n    default:\n      return state\n  }\n}\n\nexport const getCountryBbox = (country) => {\n  return async (dispatch) => {\n    const countryBbox = await countryService.getCountryBbox(country)\n    dispatch({\n      type: 'COUNTRY_BBOX',\n      data: countryBbox,\n    })\n  }\n}\n\n/* Required for map */\nexport const getCountryFeatures = (location) => {\n  return async (dispatch) => {\n    const countryFeatures = await countryService.getCountryFeatures(location)\n    dispatch({\n      type: 'COUNTRY_FEATURES',\n      data: countryFeatures,\n    })\n  }\n}\n\nexport default countryDataReducer\n","import countryService from '../services/countriesData'\n\nconst weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getWeather = (location) => {\n  return async (dispatch) => {\n    const weather = await countryService.getWeather(location)\n\n    dispatch({\n      type: 'GET_WEATHER',\n      data: weather,\n    })\n  }\n}\n\nexport default weatherReducer\n","import countryService from '../services/countriesData'\n\nconst timeZoneReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_TIME_ZONE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getTimeZone = (location) => {\n  return async (dispatch) => {\n    const timeZone = await countryService.getTimeZone(location)\n    dispatch({\n      type: 'GET_TIME_ZONE',\n      data: timeZone,\n    })\n  }\n}\n\nexport default timeZoneReducer\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/countries'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getWeather = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/weather/lat/${params.location[0]}/lng/${params.location[1]}/unit/${params.unit}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getTimeZone = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/time/lat/${params.location[0]}/lng/${params.location[1]}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getCountryNews = async (params) => {\r\n  const res = await axios.get(`/api/countries/news/${params}`)\r\n  return res.data\r\n}\r\n\r\nconst getCountry = async (params) => {\r\n  const res = await axios.get(`/api/countries/name/${params}`)\r\n  return res.data\r\n}\r\n\r\nconst getCountryBbox = async (params) => {\r\n  const res = await axios.get(`/api/countries/map/${params}`)\r\n  return res.data\r\n}\r\n\r\n// getCountryFeatures and getCountryFeatureDetails make calls to api.geoapify.com\r\nconst getCountryFeatures = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/countries/features/lat/${params[0]}/lon/${params[1]}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getCountryFeatureDetails = async (params) => {\r\n  const res = await axios.get(`/api/countries/feature/${params}`)\r\n  return res.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getWeather,\r\n  getTimeZone,\r\n  getCountry,\r\n  getCountryNews,\r\n  getCountryBbox,\r\n  getCountryFeatures,\r\n  getCountryFeatureDetails,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport loadable from '@loadable/component'\r\nimport { initializeCountries } from './reducers/countriesReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Countries = loadable(() => import('./pages/Countries'))\r\nconst CountriesMobile = loadable(() => import('./pages/CountriesMobile'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const countries = useSelector((state) => {\r\n    return state.countries.initialCountries\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (countries === undefined) {\r\n      dispatch(initializeCountries())\r\n    }\r\n  }, [dispatch, countries])\r\n\r\n  return countries !== undefined ? (\r\n    isMobile ? (\r\n      <CountriesMobile />\r\n    ) : (\r\n      <Countries />\r\n    )\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport countriesReducer, {\n  unitReducer,\n  menuReducer,\n} from './reducers/countriesReducer'\nimport countryDataReducer from './reducers/countryDataReducer'\nimport countryNewsReducer from './reducers/countryNewsReducer'\nimport weatherReducer from './reducers/weatherReducer'\nimport timeZoneReducer from './reducers/timeZoneReducer'\n\nconst reducer = combineReducers({\n  countries: countriesReducer,\n  country: countryDataReducer,\n  news: countryNewsReducer,\n  unit: unitReducer,\n  weather: weatherReducer,\n  time: timeZoneReducer,\n  menu: menuReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './assets/css/semantic.css'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'core-js'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\n/* const styleLink = document.createElement('link')\r\nstyleLink.rel = 'stylesheet'\r\nstyleLink.href =\r\n  'https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css'\r\ndocument.head.appendChild(styleLink)  */\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//  \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\",\r\n// local proxy: \"proxy\": \"http://localhost:3001/\"\r\n// backend: https://github.com/I-keep-trying/my-app-backend\r\n","import countryService from '../services/countriesData'\r\nimport regions from '../regions'\r\n\r\n/* ---------- Countries Reducer ------------- */\r\nconst countriesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_COUNTRIES':\r\n      // Find countries from restcountries.com api with missing keys\r\n      const noCapitals = action.data.filter(\r\n        (item) =>\r\n          item.name.common === 'Antarctica' ||\r\n          item.name.common === 'Bouvet Island' ||\r\n          item.name.common === 'Heard Island and McDonald Islands' ||\r\n          item.name.common === 'Macau' ||\r\n          item.name.common === 'United States Minor Outlying Islands' ||\r\n          item.name.common === 'South Georgia' ||\r\n          item.name.common === 'French Southern and Antarctic Lands'\r\n      )\r\n      // Create replacements inserting missing keys/values\r\n      const antarctica = noCapitals\r\n        .filter((c) => c.name.common === 'Antarctica')\r\n        .map((c) => {\r\n          return { ...c, capital: ['No Capital City'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const bouvetIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Bouvet Island')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Oslo'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const heardIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Heard Island and McDonald Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Bern'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const macau = noCapitals\r\n        .filter((c) => c.name.common === 'Macau')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Macau'] }\r\n        })\r\n\r\n      const usMinor = noCapitals\r\n        .filter((c) => c.name.common === 'United States Minor Outlying Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Washington DC'] }\r\n        })\r\n\r\n      const southGeorgia = noCapitals\r\n        .filter((c) => c.name.common === 'South Georgia')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      const frenchSouthern = noCapitals\r\n        .filter((c) => c.name.common === 'French Southern and Antarctic Lands')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      // Remove defective country objects\r\n      const otherCountries = action.data.filter(\r\n        (item) =>\r\n          item.name.common !== 'Antarctica' &&\r\n          item.name.common !== 'Bouvet Island' &&\r\n          item.name.common !== 'Heard Island and McDonald Islands' &&\r\n          item.name.common !== 'Macau' &&\r\n          item.name.common !== 'United States Minor Outlying Islands' &&\r\n          item.name.common !== 'South Georgia' &&\r\n          item.name.common !== 'French Southern and Antarctic Lands'\r\n      )\r\n\r\n      // Insert replacement objects with keys/values in place\r\n      const nCountries = [\r\n        ...otherCountries,\r\n        southGeorgia[0],\r\n        heardIsland[0],\r\n        macau[0],\r\n        usMinor[0],\r\n        antarctica[0],\r\n        bouvetIsland[0],\r\n        frenchSouthern[0],\r\n      ]\r\n\r\n      const sortCountries = (a, b) => {\r\n        const key =\r\n          window.localStorage.getItem('sort key') === null\r\n            ? 'name'\r\n            : window.localStorage.getItem('sort key')\r\n\r\n        const dir =\r\n          window.localStorage.getItem('direction') === null\r\n            ? 'ascending'\r\n            : window.localStorage.getItem('direction')\r\n\r\n        if (key === 'area' || key === 'population') {\r\n          if (a[key] < b[key]) {\r\n            return dir === 'ascending' ? -1 : 1\r\n          }\r\n          if (a[key] > b[key]) {\r\n            return dir === 'ascending' ? 1 : -1\r\n          }\r\n        } else if (key === 'capital') {\r\n          return dir === 'ascending'\r\n            ? a[key][0].localeCompare(b[key][0])\r\n            : b[key][0].localeCompare(a[key][0])\r\n        } else if (key === 'name') {\r\n          return dir === 'ascending'\r\n            ? a[key].common.localeCompare(b[key].common)\r\n            : b[key].common.localeCompare(a[key].common)\r\n        } else {\r\n          return dir === 'ascending'\r\n            ? a[key].localeCompare(b[key].common)\r\n            : b[key].localeCompare(a[key].common)\r\n        }\r\n      }\r\n\r\n      const initialCountries = nCountries.sort(sortCountries)\r\n\r\n      return {\r\n        initialCountries,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: {\r\n            id: 'FZUe47mEY9PCOzYmMxzYY',\r\n            region: 'All',\r\n            subregions: [],\r\n          },\r\n          subregion: '',\r\n          reset: false,\r\n        },\r\n        filtered: initialCountries,\r\n        sortConfig: {\r\n          key:\r\n            window.localStorage.getItem('sort key') !== null\r\n              ? window.localStorage.getItem('sort key')\r\n              : 'name',\r\n          direction:\r\n            window.localStorage.getItem('direction') !== null\r\n              ? window.localStorage.getItem('direction')\r\n              : 'ascending',\r\n        },\r\n      }\r\n    case 'SEARCH_COUNTRIES':\r\n      if (action.input === '') {\r\n        return {\r\n          initialCountries,\r\n          filter: {\r\n            input: '',\r\n            country: '',\r\n            region: {\r\n              id: 'FZUe47mEY9PCOzYmMxzYY',\r\n              region: 'All',\r\n              subregions: [],\r\n            },\r\n            subregion: '',\r\n            reset: false,\r\n          },\r\n          filtered: initialCountries,\r\n          sortConfig: {\r\n            key: 'name',\r\n            direction: 'ascending',\r\n          },\r\n        }\r\n      } else if (action.input) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            input: action.input.toLowerCase(),\r\n          },\r\n        }\r\n\r\n        const filtered = toSearch.initialCountries.filter((c) =>\r\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\r\n        )\r\n        return filtered.length === 0\r\n          ? { ...toSearch, filtered: [] }\r\n          : { ...toSearch, filtered: filtered }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'SELECT_A_COUNTRY':\r\n      if (action.country) {\r\n        const reg = regions.filter((r) => r.region === action.country.region)\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            country: action.country.name.common.toLowerCase(),\r\n            region: reg[0],\r\n            subregion: action.country.subregion,\r\n          },\r\n        }\r\n        const filtered = toSearch.initialCountries.filter(\r\n          (c) =>\r\n            c.name.common.toLowerCase() ===\r\n            toSearch.filter.country.toLowerCase()\r\n        )\r\n        return { ...toSearch, filtered: filtered }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'FILTER_BY_REGION':\r\n      if (action.region) {\r\n        const selectRegion = {\r\n          ...state,\r\n          filter: { ...state.filter, region: action.region, subregion: '' },\r\n        }\r\n\r\n        const regionFiltered =\r\n          selectRegion.filter.region.region.toLowerCase() === 'all'\r\n            ? selectRegion.initialCountries\r\n            : selectRegion.initialCountries.filter(\r\n                (c) =>\r\n                  c.region.toLowerCase() ===\r\n                  selectRegion.filter.region.region.toLowerCase()\r\n              )\r\n\r\n        return {\r\n          ...selectRegion,\r\n          filtered: regionFiltered,\r\n          filter: selectRegion.filter,\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'FILTER_BY_SUBREGION':\r\n      if (action.subregion) {\r\n        const subregionFiltered = state.initialCountries.filter(\r\n          (c) => c.subregion.toLowerCase() === action.subregion.toLowerCase()\r\n        )\r\n        const newState = {\r\n          ...state,\r\n          filter: { ...state.filter, subregion: action.subregion },\r\n          filtered: subregionFiltered,\r\n        }\r\n        return newState\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'SORT_COUNTRIES':\r\n      const direction =\r\n        state.sortConfig.direction === 'ascending' ? 'descending' : 'ascending'\r\n      window.localStorage.setItem('direction', direction)\r\n\r\n      let sortableItems = state.filtered\r\n\r\n      if (action.key === 'area' || action.key === 'population') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key] - b[action.key]\r\n            : b[action.key] - a[action.key]\r\n        )\r\n      } else if (action.key === 'name') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key].common.localeCompare(b[action.key].common)\r\n            : b[action.key].common.localeCompare(a[action.key].common)\r\n        )\r\n      } else if (action.key === 'capital') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key][0].localeCompare(b[action.key][0])\r\n            : b[action.key][0].localeCompare(a[action.key][0])\r\n        )\r\n      } else {\r\n        sortableItems.sort((a, b) =>\r\n          a[action.key] && direction === 'ascending'\r\n            ? a[action.key].localeCompare(b[action.key])\r\n            : b[action.key].localeCompare(a[action.key])\r\n        )\r\n      }\r\n      const sortedState = {\r\n        ...state,\r\n        filtered: sortableItems,\r\n        sortConfig: { key: action.key, direction: direction },\r\n      }\r\n      return sortedState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* ------------ Countries Reducer Actions ------------- */\r\n\r\nexport const initializeCountries = () => {\r\n  return async (dispatch) => {\r\n    const countries = await countryService.getAll()\r\n    dispatch({\r\n      type: 'INIT_COUNTRIES',\r\n      data: countries,\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchCountriesByName = (input) => {\r\n  return {\r\n    type: 'SEARCH_COUNTRIES',\r\n    input,\r\n  }\r\n}\r\n\r\nexport const sortCountries = (key) => {\r\n  return {\r\n    type: 'SORT_COUNTRIES',\r\n    key,\r\n  }\r\n}\r\n\r\nexport const selectCountry = (country) => {\r\n  return {\r\n    type: 'SELECT_A_COUNTRY',\r\n    country,\r\n  }\r\n}\r\n\r\nexport const filterCountriesByRegion = (region) => {\r\n  return {\r\n    type: 'FILTER_BY_REGION',\r\n    region,\r\n  }\r\n}\r\n\r\nexport const filterCountriesBySubRegion = (subregion) => {\r\n  return {\r\n    type: 'FILTER_BY_SUBREGION',\r\n    subregion,\r\n  }\r\n}\r\n\r\n/* -------------Unit Reducer ------------------ */\r\nexport const unitReducer = (state = { unit: 'metric' }, action) => {\r\n  switch (action.type) {\r\n    case 'UNIT_TOGGLE':\r\n      return { ...state, unit: action.unit }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleUnit = (unit) => {\r\n  return {\r\n    type: 'UNIT_TOGGLE',\r\n    unit: unit,\r\n  }\r\n}\r\n\r\n/* ------------- Menu Reducer ------------------ */\r\nexport const menuReducer = (state = { show: false }, action) => {\r\n  switch (action.type) {\r\n    case 'MENU_TOGGLE':\r\n      console.log('action.show', action.show)\r\n      const show = state.show === false ? true : false\r\n      return { ...state, show: show }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleMenu = (show) => {\r\n  return {\r\n    type: 'MENU_TOGGLE',\r\n    show,\r\n  }\r\n}\r\n\r\nexport default countriesReducer\r\n"],"sourceRoot":""}