{"version":3,"sources":["components/Header.js"],"names":["HeaderNav","useState","value","setValue","unit","useSelector","state","filtered","countries","dispatch","useDispatch","handleInput","e","preventDefault","input","target","searchCountriesByName","noMatch","length","filter","clearInput","changeUnit","val","toggleUnit","id","attached","inverted","borderless","Item","header","className","name","color","size","icon","link","onClick","type","placeholder","onChange","position","Group","basic","compact","info","Header"],"mappings":"6PAuGeA,UA1FG,WAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,KAAKA,QAEzCE,EAAQD,aAAY,SAACC,GAAD,OAAWA,KAE/BC,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAME,UAAUD,YAClDE,EAAWC,cAEXC,EAAc,SAACC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOb,MACvBO,EAASO,YAAsBF,IAC/BX,EAASW,IAGLG,EACgC,IAApCX,EAAME,UAAUD,SAASW,QAAiD,KAAjCZ,EAAME,UAAUW,OAAOL,MAE5DM,EAAa,WACjBX,EAASO,YAAsB,KAC/Bb,EAAS,KAGLkB,EAAa,SAACC,GAClBb,EAASc,YAAWD,KAGtB,OACE,qCACE,eAAC,IAAD,CAAME,GAAG,WAAWC,SAAS,MAAMC,UAAQ,EAACC,YAAU,EAAtD,UACE,eAAC,IAAKC,KAAN,CAAWC,QAAM,EAAjB,UACE,cAAC,IAAD,CAAMC,UAAU,WAAWC,KAAK,QAAQC,MAAM,OAAOC,KAAK,QAC1D,qDAEF,cAAC,IAAKL,KAAN,UACE,cAAC,IAAD,CACEM,KACE,cAAC,IAAD,CACEC,MAAI,EACJJ,KAAM7B,EAAMgB,OAAS,EAAI,QAAU,SACnCkB,QAASlC,EAAMgB,OAAS,EAAIE,EAAaT,IAG7C0B,KAAK,SACLnC,MAAOA,EACPoC,YAAY,iBACZC,SAAU5B,MAGd,eAAC,IAAKiB,KAAN,WAAYrB,EAASW,OAArB,oBACA,cAAC,IAAKU,KAAN,CAAWY,SAAS,QAApB,SACE,eAAC,IAAOC,MAAR,WACE,cAAC,IAAD,CACER,KAAK,SACLS,MAAgB,WAATtC,EACPsB,UAAQ,EACRM,MAAM,OACNI,QAAS,kBAAMf,EAAW,WAL5B,oBASA,cAAC,IAAD,CACEY,KAAK,SACLS,MAAgB,WAATtC,EACPsB,UAAQ,EACRM,MAAM,OACNI,QAAS,kBAAMf,EAAW,aAL5B,8BAYLJ,EACC,cAAC,IAAD,UACE,eAAC,IAAD,CAAS0B,SAAO,EAACC,MAAI,EAArB,UACE,cAAC,IAAQC,OAAT,4CACA,cAAC,IAAD,CAAQH,OAAK,EAACV,MAAM,OAAOI,QAAShB,EAApC,qBAMJ","file":"static/js/18.c8a23adc.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n  Container,\r\n  Message,\r\n} from 'semantic-ui-react'\r\nimport { toggleUnit, searchCountriesByName } from '../reducers/countryReducer'\r\nimport '../assets/css/App.css'\r\n\r\nconst HeaderNav = () => {\r\n  const [value, setValue] = useState('')\r\n  const unit = useSelector((state) => state.unit.unit)\r\n\r\n  const state = useSelector((state) => state)\r\n\r\n  const filtered = useSelector((state) => state.countries.filtered)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    const input = e.target.value\r\n    dispatch(searchCountriesByName(input))\r\n    setValue(input)\r\n  }\r\n\r\n  const noMatch =\r\n    state.countries.filtered.length === 0 && state.countries.filter.input !== ''\r\n\r\n  const clearInput = () => {\r\n    dispatch(searchCountriesByName(''))\r\n    setValue('')\r\n  }\r\n\r\n  const changeUnit = (val) => {\r\n    dispatch(toggleUnit(val))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu id=\"nav menu\" attached=\"top\" inverted borderless>\r\n        <Menu.Item header>\r\n          <Icon className=\"App-logo\" name=\"globe\" color=\"teal\" size=\"big\" />\r\n          <p> World Countries </p>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Input\r\n            icon={\r\n              <Icon\r\n                link\r\n                name={value.length > 0 ? 'close' : 'search'}\r\n                onClick={value.length > 0 ? clearInput : handleInput}\r\n              />\r\n            }\r\n            type=\"search\"\r\n            value={value}\r\n            placeholder=\"Search by name\"\r\n            onChange={handleInput}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item>{filtered.length} records found</Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Button.Group>\r\n            <Button\r\n              size=\"medium\"\r\n              basic={unit === 'metric' ? false : true}\r\n              inverted\r\n              color=\"teal\"\r\n              onClick={() => changeUnit('metric')}\r\n            >\r\n              Metric\r\n            </Button>\r\n            <Button\r\n              size=\"medium\"\r\n              basic={unit === 'metric' ? true : false}\r\n              inverted\r\n              color=\"teal\"\r\n              onClick={() => changeUnit('imperial')}\r\n            >\r\n              Imperial\r\n            </Button>\r\n          </Button.Group>\r\n        </Menu.Item>\r\n      </Menu>\r\n      {noMatch ? (\r\n        <Container>\r\n          <Message compact info>\r\n            <Message.Header>No matches, please try again.</Message.Header>\r\n            <Button basic color=\"teal\" onClick={clearInput}>\r\n              OK\r\n            </Button>\r\n          </Message>\r\n        </Container>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeaderNav\r\n"],"sourceRoot":""}