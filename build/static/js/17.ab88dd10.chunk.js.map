{"version":3,"sources":["services/sortableTable.js","components/Table.js"],"names":["useSortableData1","items","useState","key","direction","sortConfig","setSortConfig","window","localStorage","setItem","now","Date","getTime","setupTime","getItem","clear","useMemo","sortableItems","sort","a","b","common","localeCompare","requestSort","CountriesTable1","id","region","subregions","setRegion","dispatch","useDispatch","state","useSelector","unit","countriesFiltered","countries","filtered","length","initialCountries","countriesFilteredByRegion","countriesFilteredBySubRegion","countriesToRender","useSortableData","sortIcons","name","console","dir","isIE","attached","style","padding","border","sortable","compact","selectable","unstackable","size","Header","filter","toLowerCase","top","Row","fieldName","map","HeaderCell","onClick","Body","item","areaConvert","Math","round","area","cursor","country","filterCountries","reg","regions","r","handleClick","Cell","cca3","width","height","src","flags","png","svg","alt","bordered","loading","undefined","capital","subregion","population","toLocaleString","CountriesTable","React","memo"],"mappings":"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","file":"static/js/17.ab88dd10.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react'\n\nconst useSortableData1 = (items) => {\n  const [sortConfig, setSortConfig] = useState({\n    key: 'name',\n    direction: 'ascending',\n  })\n\n  // set initial sort\n  window.localStorage.setItem('sort key', sortConfig.key)\n  window.localStorage.setItem('direction', sortConfig.direction)\n\n  // set expiration for local storage to clear\n  const now = new Date().getTime()\n  const setupTime = localStorage.getItem('setupTime')\n  if (setupTime == null) {\n    localStorage.setItem('setupTime', now)\n  } else {\n    if (now - setupTime > 1 * 60 * 60 * 1000) {\n      localStorage.clear()\n      localStorage.setItem('setupTime', now)\n    }\n  }\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items]\n    if (sortConfig.key === 'area' || sortConfig.key === 'population') {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1\n        }\n        return 0\n      })\n    } else if (sortConfig.key === 'name') {\n      sortableItems.sort((a, b) => {\n        return sortConfig.direction === 'ascending'\n          ? a[sortConfig.key].common.localeCompare(b[sortConfig.key].common)\n          : b[sortConfig.key].common.localeCompare(a[sortConfig.key].common)\n      })\n    } else if (sortConfig.key === 'capital') {\n      sortableItems.sort((a, b) => {\n        return sortConfig.direction === 'ascending'\n          ? a[sortConfig.key][0].localeCompare(b[sortConfig.key][0])\n          : b[sortConfig.key][0].localeCompare(a[sortConfig.key][0])\n      })\n    } else {\n      sortableItems.sort((a, b) => {\n        return a[sortConfig.key] && sortConfig.direction === 'ascending'\n          ? a[sortConfig.key].localeCompare(b[sortConfig.key])\n          : b[sortConfig.key].localeCompare(a[sortConfig.key])\n      })\n    }\n\n    return sortableItems\n  }, [items, sortConfig])\n\n  const requestSort = (key) => {\n    let direction =\n      sortConfig.direction === 'ascending' ? 'descending' : 'ascending'\n    setSortConfig({ key, direction })\n    window.localStorage.setItem('sort key', key)\n    window.localStorage.setItem('direction', direction)\n  }\n\n  return { items: sortedItems, requestSort }\n}\n\n//const useSortableData = React.memo(useSortableData1)\n\nexport default useSortableData1\n\n// original table sort code: https://codesandbox.io/s/table-sorting-gxt7g?file=/src/App.js:161-2693\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { isIE } from 'react-device-detect'\nimport { Segment, Table, Icon, Image } from 'semantic-ui-react'\nimport { filterCountries } from '../reducers/countryReducer'\nimport useSortableData from '../services/sortableTable'\nimport regions from '../regions'\nimport { AspectRatio } from 'react-aspect-ratio'\n\nconst CountriesTable1 = () => {\n  const [, setRegion] = useState({\n    id: 'FZUe47mEY9PCOzYmMxzYY',\n    region: 'All',\n    subregions: [],\n  })\n\n  const dispatch = useDispatch()\n  const state = useSelector((state) => state)\n\n  const unit = useSelector((state) => state.unit.unit)\n\n  const countriesFiltered = useSelector((state) => {\n    return state.countries.filtered.length > 0\n      ? state.countries.filtered\n      : state.countries.initialCountries\n  })\n\n  const countriesFilteredByRegion = useSelector(\n    (state) => state.countries.filtered\n  )\n\n  const countriesFilteredBySubRegion = useSelector(\n    (state) => state.countries.filtered\n  )\n\n  const countriesToRender =\n    countriesFilteredBySubRegion.length > 0\n      ? countriesFilteredBySubRegion\n      : countriesFilteredByRegion.length > 0\n      ? countriesFilteredByRegion\n      : countriesFiltered\n\n  const handleClick = (country) => {\n    dispatch(filterCountries(country))\n    const reg = regions.filter((r) => r.region === country.region)\n    setRegion(reg[0])\n  }\n\n  const tableHeaders = [\n    { fieldName: 'CCA3', id: 'cca3' },\n    { fieldName: 'Flag', id: 'flag' },\n    { fieldName: 'Name', id: 'name' },\n    { fieldName: 'Capital', id: 'capital' },\n    { fieldName: 'Region', id: 'region' },\n    { fieldName: 'Subregion', id: 'subregion' },\n    { fieldName: 'Population', id: 'population' },\n    { fieldName: 'Area kmÂ²', id: 'area' },\n  ]\n\n  const { items, requestSort } = useSortableData(countriesToRender)\n\n  const sortIcons = (id) => {\n    if (\n      window.localStorage.getItem('direction') === 'ascending' &&\n      window.localStorage.getItem('sort key') === id\n    ) {\n      return <Icon name=\"caret up\" />\n    } else if (\n      window.localStorage.getItem('direction') === 'descending' &&\n      window.localStorage.getItem('sort key') === id\n    ) {\n      return <Icon name=\"caret down\" />\n    }\n  }\n  console.dir('isIE?', isIE)\n\n  return (\n    <Segment attached=\"bottom\" style={{ padding: 0, border: 0 }}>\n      {countriesToRender.length > 1 ? (\n        <>\n          <Table\n            sortable\n            compact\n            selectable\n            unstackable\n            size=\"small\"\n            style={{ border: 0 }}\n          >\n            <Table.Header\n              style={\n                state.countries.filter.region.toLowerCase() === 'all'\n                  ? { top: 104 }\n                  : { top: 146 }\n              }\n            >\n              <Table.Row>\n                <>\n                  {tableHeaders.map(({ fieldName, id }) => (\n                    <Table.HeaderCell key={id} onClick={() => requestSort(id)}>\n                      {fieldName === 'Area kmÂ²'\n                        ? unit === 'metric'\n                          ? fieldName\n                          : 'Area miÂ²'\n                        : fieldName}\n                      {sortIcons(id)}\n                    </Table.HeaderCell>\n                  ))}\n                </>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <>\n                {items.map((item) => {\n                  const areaConvert = Math.round(item.area / 2.59)\n                  return (\n                    <Table.Row\n                      style={{ cursor: 'pointer' }}\n                      key={item.cca3}\n                      onClick={() => handleClick(item)}\n                    >\n                      <Table.Cell>{item.cca3}</Table.Cell>\n                      <Table.Cell>\n                        <AspectRatio\n                          style={{ width: 80, height: 55 }}\n                        >\n                          <Image\n                            style={{ width: '100%', height: 'auto' }}\n                            size=\"tiny\"\n                            src={isIE ? item.flags.png : item.flags.svg}\n                            alt=\"country flag\"\n                            bordered\n                            loading=\"lazy\"\n                          />\n                        </AspectRatio>\n                      </Table.Cell>\n                      <Table.Cell>{item.name.common}</Table.Cell>\n                      <Table.Cell>\n                        {item.capital === undefined ? 'no data' : item.capital}\n                      </Table.Cell>\n                      <Table.Cell>{item.region}</Table.Cell>\n                      <Table.Cell>{item.subregion}</Table.Cell>\n                      <Table.Cell>\n                        {item.population.toLocaleString()}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {unit === 'imperial'\n                          ? areaConvert.toLocaleString()\n                          : item.area.toLocaleString()}\n                      </Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n              </>\n            </Table.Body>\n          </Table>\n        </>\n      ) : null}\n    </Segment>\n  )\n}\n\nconst CountriesTable = React.memo(CountriesTable1)\n\nexport default CountriesTable\n"],"sourceRoot":""}