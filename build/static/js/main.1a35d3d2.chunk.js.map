{"version":3,"sources":["services/notes.js","reducers/noteReducer.js","components/Notes.js","components/Countries.js","components/NewNote.js","reducers/filterReducer.js","components/VisibilityFilter.js","services/countries.js","reducers/countryReducer.js","App.js","store.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","createNew","content","object","important","post","noteReducer","state","action","type","id","noteToChange","find","n","changedNote","map","note","Note","handleClick","onClick","mapDispatchToProps","toggleImportanceOf","ConnectedNotes","connect","filter","notes","props","Country","country","console","log","name","ConnectedCountries","countries","i","createNote","dispatch","noteService","newNote","addNote","event","preventDefault","target","value","onSubmit","filterChange","filterReducer","VisibilityFilter","useDispatch","onChange","countryReducer","App","useEffect","countryService","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a35d3d2.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\n//const baseUrl = 'http://localhost:3001/api/notes'\nconst baseUrl = '/api/notes'\n//const baseUrl = 'https://sheltered-scrubland-08732.herokuapp.com/api/notes'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createNew = async (content) => {\n  const object = { content, important: false }\n  const response = await axios.post(baseUrl, object)\n  return response.data\n}\n\nexport default { getAll, createNew }\n","import noteService from '../services/notes'\n\nconst noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data]\n    case 'TOGGLE_IMPORTANCE': {\n      const id = action.data.id\n      const noteToChange = state.find((n) => n.id === id)\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important,\n      }\n      return state.map((note) => (note.id !== id ? note : changedNote))\n    }\n    case 'INIT_NOTES':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const createNote = (content) => {\n  return async (dispatch) => {\n    const newNote = await noteService.createNew(content)\n    dispatch({\n      type: 'NEW_NOTE',\n      data: newNote,\n    })\n  }\n}\n\nexport const toggleImportanceOf = (id) => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: { id },\n  }\n}\n\nexport const initializeNotes = () => {\n  return async (dispatch) => {\n    const notes = await noteService.getAll()\n    dispatch({\n      type: 'INIT_NOTES',\n      data: notes,\n    })\n  }\n}\n\nexport default noteReducer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleImportanceOf } from '../reducers/noteReducer'\n\nconst Note = ({ note, handleClick }) => {\n  return (\n    <li onClick={handleClick}>\n      {note.content}\n      <strong> {note.important ? 'important' : ''}</strong>\n    </li>\n  )\n}\n\nconst Notes = (props) => {\n  return (\n    <ul>\n      {props.notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n          handleClick={() => props.toggleImportanceOf(note.id)}\n        />\n      ))}\n    </ul>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  if (state.filter === 'ALL') {\n    return {\n      notes: state.notes,\n    }\n  }\n  return {\n    notes:\n      state.filter === 'IMPORTANT'\n        ? state.notes.filter((note) => note.important)\n        : state.notes.filter((note) => !note.important),\n  }\n}\n\nconst mapDispatchToProps = {\n  toggleImportanceOf,\n}\n\nconst ConnectedNotes = connect(mapStateToProps, mapDispatchToProps)(Notes)\nexport default ConnectedNotes\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Country = ({ country, handleClick }) => {\n  console.log('country', country)\n  return <li onClick={handleClick}>{country.name}</li>\n}\n\nconst Countries = (props) => {\n  console.log('props.countries', props.countries)\n  return (\n    <ul>\n      {props.countries.map((country, i) => (\n        <Country\n          key={i}\n          country={country}\n          //  handleClick={() => props.toggleImportanceOf(country.id)}\n        />\n      ))}\n    </ul>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    countries: state.countries,\n  }\n}\n\nconst ConnectedCountries = connect(mapStateToProps)(Countries)\n\nexport default ConnectedCountries\n","import React from 'react'\nimport { useDispatch, connect } from 'react-redux'\nimport { createNote } from '../reducers/noteReducer'\n\nconst NewNote = (props) => {\n\n  const addNote = async (event) => {\n    event.preventDefault()\n    const content = event.target.note.value\n    event.target.note.value = ''\n    props.createNote(content)\n  }\n\n  return (\n    <form onSubmit={addNote}>\n      <input name=\"note\" />\n      <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nexport default connect(null, { createNote })(NewNote)\n","const filterReducer = (state = 'ALL', action) => {\n  switch (action.type) {\n    case 'SET_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport const filterChange = (filter) => {\n  return {\n    type: 'SET_FILTER',\n    filter,\n  }\n}\n\nexport default filterReducer\n","import React from 'react'\nimport { filterChange } from '../reducers/filterReducer'\nimport { useDispatch } from 'react-redux'\n\nconst VisibilityFilter = () => {\n  const dispatch = useDispatch()\n\n  return (\n    <div>\n      all\n      <input\n        type=\"radio\"\n        name=\"filter\"\n        onChange={() => dispatch(filterChange('ALL'))}\n      />\n      important\n      <input\n        type=\"radio\"\n        name=\"filter\"\n        onChange={() => dispatch(filterChange('IMPORTANT'))}\n      />\n      nonimportant\n      <input\n        type=\"radio\"\n        name=\"filter\"\n        onChange={() => dispatch(filterChange('NONIMPORTANT'))}\n      />\n    </div>\n  )\n}\n\nexport default VisibilityFilter\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\n//const baseUrl = 'https://restcountries.com/v3.1/all'\nconst baseUrl = '/api/countries'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getAll }\n","import countryService from '../services/countries'\n\nconst countryReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_COUNTRIES':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeCountries = () => {\n  return async (dispatch) => {\n    const countries = await countryService.getAll()\n    console.log('countries', countries)\n    dispatch({\n      type: 'INIT_COUNTRIES',\n      data: countries,\n    })\n  }\n}\n\nexport default countryReducer\n","import React, { useEffect } from 'react'\nimport Notes from './components/Notes'\nimport Countries from './components/Countries'\nimport NewNote from './components/NewNote'\nimport VisibilityFilter from './components/VisibilityFilter'\nimport { initializeNotes } from './reducers/noteReducer'\nimport { initializeCountries } from './reducers/countryReducer'\nimport { useDispatch } from 'react-redux'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeCountries())\n    dispatch(initializeNotes())\n  }, [dispatch])\n\n  return (\n    <div>\n      <NewNote />\n      <VisibilityFilter />\n      <Notes />\n      <Countries />\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport noteReducer from './reducers/noteReducer'\nimport filterReducer from './reducers/filterReducer'\nimport countryReducer from './reducers/countryReducer'\n\nconst reducer = combineReducers({\n  notes: noteReducer,\n  filter: filterReducer,\n  countries: countryReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n   /* \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\", */"],"sourceRoot":""}