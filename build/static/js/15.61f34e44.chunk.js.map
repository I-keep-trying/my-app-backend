{"version":3,"sources":["assets/images/ua-coa.svg","components/HeaderMobile.js"],"names":["HeaderNav","useState","value","setValue","activeItem","setActiveItem","activeSubregion","setActiveSubregion","id","region","subregions","setRegion","state","useSelector","recordsFound","countries","filtered","unit","dispatch","useDispatch","useEffect","handleInput","e","preventDefault","input","target","searchCountriesByName","handleSort","key","dir","sortCountries","handleRegionClick","reg","filterCountriesByRegion","sortIcons","sortConfig","direction","Icon","name","Menu","attached","inverted","borderless","Item","header","onClick","toggleMenu","Image","alt","srcSet","flag","size","src","as","href","position","val","toggleUnit","Label","color","vertical","fluid","Input","icon","link","length","type","placeholder","onChange","Segment","Button","labelPosition","basic","content","Dropdown","item","text","regions","map","r","active","s","i","sub","filterCountriesBySubRegion"],"mappings":"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","file":"static/js/15.61f34e44.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ua-coa.4f804af0.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Input,\r\n  Label,\r\n  Dropdown,\r\n  Button,\r\n  Segment,\r\n  Image,\r\n} from 'semantic-ui-react'\r\nimport {\r\n  toggleUnit,\r\n  toggleMenu,\r\n  searchCountriesByName,\r\n  sortCountries,\r\n  filterCountriesByRegion,\r\n  filterCountriesBySubRegion,\r\n} from '../reducers/countryReducer'\r\nimport regions from '../regions'\r\n\r\nimport '../assets/css/App.css'\r\nimport flag from '../assets/images/ua-coa.svg'\r\n\r\nconst HeaderNav = () => {\r\n  const [value, setValue] = useState('')\r\n  const [activeItem, setActiveItem] = useState('All')\r\n  const [activeSubregion, setActiveSubregion] = useState('')\r\n  const [region, setRegion] = useState({\r\n    id: 'FZUe47mEY9PCOzYmMxzYY',\r\n    region: 'All',\r\n    subregions: [],\r\n  })\r\n\r\n  const state = useSelector((state) => state)\r\n\r\n  const recordsFound = useSelector((state) => state.countries.filtered)\r\n\r\n  const unit = useSelector((state) => state.unit.unit)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (value !== '') {\r\n      setRegion({\r\n        id: 'FZUe47mEY9PCOzYmMxzYY',\r\n        region: 'All',\r\n        subregions: [],\r\n      })\r\n    }\r\n  }, [value])\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    const input = e.target.value\r\n    dispatch(searchCountriesByName(input))\r\n    setValue(input)\r\n  }\r\n\r\n  const clearInput = () => {\r\n    dispatch(searchCountriesByName(''))\r\n    setValue('')\r\n  }\r\n\r\n  const showHideMenu = () => {\r\n    dispatch(toggleMenu())\r\n  }\r\n\r\n  const changeUnit = (val) => {\r\n    dispatch(toggleUnit(val))\r\n  }\r\n\r\n  const handleSort = (key, dir) => {\r\n    dispatch(sortCountries(key, dir))\r\n  }\r\n\r\n  const handleRegionClick = (reg) => {\r\n    dispatch(filterCountriesByRegion(reg.region))\r\n    setActiveItem(reg.region)\r\n    setActiveSubregion(reg.subregions[0])\r\n    setRegion(reg)\r\n    setValue('')\r\n  }\r\n\r\n  const handleSubregionClick = (sub) => {\r\n    dispatch(filterCountriesBySubRegion(sub))\r\n    setActiveSubregion(sub)\r\n    setValue('')\r\n  }\r\n\r\n  const sortIcons = (id) => {\r\n    if (\r\n      state.countries.sortConfig.direction === 'ascending' &&\r\n      state.countries.sortConfig.key === id\r\n    ) {\r\n      return <Icon name=\"caret up\" />\r\n    } else if (\r\n      state.countries.sortConfig.direction === 'descending' &&\r\n      state.countries.sortConfig.key === id\r\n    ) {\r\n      return <Icon name=\"caret down\" />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu attached=\"top\" inverted borderless>\r\n        <Menu.Item id=\"app-title\" header onClick={() => showHideMenu()}>\r\n          <p> World Countries Mobile </p>\r\n        </Menu.Item>\r\n        <Menu.Item id=\"flag-menu\">\r\n          <Image\r\n            alt=\"ukraine flag\"\r\n            srcSet={`${flag} 100w`}\r\n            size=\"mini\"\r\n            src={flag}\r\n            as=\"a\"\r\n            href=\"https://theeasternborder.lv/\"\r\n          />{' '}\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item\r\n            onClick={() =>\r\n              changeUnit(unit === 'metric' ? 'imperial' : 'metric')\r\n            }\r\n          >\r\n            <Label color=\"blue\">\r\n              {unit === 'metric' ? 'imperial' : 'metric'}\r\n            </Label>\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n\r\n      {/* text input */}\r\n      <Menu id=\"mobile-header\" inverted vertical fluid>\r\n        <Menu.Item id=\"mobile-header-item\">\r\n          <Input\r\n            inverted\r\n            size=\"mini\"\r\n            icon={\r\n              <Icon\r\n                link\r\n                name={value.length > 0 ? 'close' : 'search'}\r\n                onClick={value.length > 0 ? clearInput : handleInput}\r\n              />\r\n            }\r\n            type=\"search\"\r\n            value={value}\r\n            placeholder=\"Search by name\"\r\n            onChange={handleInput}\r\n          />\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Menu id=\"mobile-header2\" inverted vertical fluid>\r\n        <Menu.Item id=\"mobile-header2-item\">\r\n          {recordsFound.length}\r\n          {recordsFound.length === 1 ? ' record found' : ' records found'}\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      {/* sort menu */}\r\n      {recordsFound.length === 1 ? (\r\n        <>\r\n          <Segment inverted>\r\n            <Button\r\n              labelPosition=\"left\"\r\n              icon=\"left chevron\"\r\n              basic\r\n              color=\"yellow\"\r\n              fluid\r\n              content=\"All Countries\"\r\n              onClick={() => dispatch(searchCountriesByName(''))}\r\n            ></Button>\r\n          </Segment>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Menu inverted borderless size=\"tiny\">\r\n            <Dropdown item text=\"Sort\">\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => handleSort('name')}>\r\n                  {sortIcons('name')}\r\n                  Name\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleSort('capital')}>\r\n                  {sortIcons('capital')}\r\n                  Capital\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleSort('region')}>\r\n                  {sortIcons('region')}\r\n                  Region\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleSort('subregion')}>\r\n                  {sortIcons('subregion')}\r\n                  Subregion\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleSort('population')}>\r\n                  {sortIcons('population')}\r\n                  Population\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => handleSort('area')}>\r\n                  {sortIcons('area')}\r\n                  Area\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Menu.Item position=\"right\">\r\n              Sorted by: {state.countries.sortConfig.key}\r\n              {', '}\r\n              {state.countries.sortConfig.direction}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <Menu inverted borderless size=\"tiny\">\r\n            <Menu.Item position=\"left\">Filter by</Menu.Item>\r\n            <Dropdown item text={value !== '' ? 'All' : activeItem}>\r\n              <Dropdown.Menu>\r\n                {regions.map((r) =>\r\n                  value === 'All' ? (\r\n                    <Dropdown.Item\r\n                      key={r.id}\r\n                      text=\"All\"\r\n                      value=\"All\"\r\n                      active={activeItem === 'All'}\r\n                      onClick={() => handleRegionClick(r)}\r\n                    />\r\n                  ) : (\r\n                    <Dropdown.Item\r\n                      key={r.id}\r\n                      text={r.region}\r\n                      value={r.region}\r\n                      active={activeItem === r.region}\r\n                      onClick={() => handleRegionClick(r)}\r\n                    />\r\n                  )\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu>\r\n        </>\r\n      )}\r\n\r\n      {region.region !== 'All' ? (\r\n        <Menu inverted borderless size=\"tiny\">\r\n          <Menu.Item position=\"left\">Subregion: </Menu.Item>\r\n          <Dropdown item text={activeSubregion}>\r\n            <Dropdown.Menu>\r\n              {region.subregions.map((s, i) => (\r\n                <Dropdown.Item\r\n                  key={i}\r\n                  text={s}\r\n                  value={s}\r\n                  active={activeSubregion === s}\r\n                  onClick={() => handleSubregionClick(s)}\r\n                />\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeaderNav\r\n"],"sourceRoot":""}