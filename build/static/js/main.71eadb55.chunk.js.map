{"version":3,"sources":["reducers/countryNewsReducer.js","reducers/weatherReducer.js","reducers/timeZoneReducer.js","reducers/countryDataReducer.js","services/countriesData.js","App.js","store.js","index.js","util/sortCountries.js","reducers/countriesReducer.js"],"names":["initialState","news","status","totalResults","articles","bbox","featuresDetails","getCountryNews","country","dispatch","a","countryService","countryData","type","data","countryNewsReducer","state","action","toString","includes","getWeather","location","weather","weatherReducer","getTimeZone","timeZone","timeZoneReducer","getCountryBbox","countryBbox","countryDataReducer","getAll","axios","get","response","params","unit","res","Countries","loadable","CountriesMobile","App","useDispatch","countries","useSelector","initialCountries","useEffect","length","initializeCountries","window","localStorage","setItem","isMobile","reducer","combineReducers","countriesReducer","unitReducer","time","menu","menuReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","sortCountries","b","key","getItem","dir","localeCompare","common","filter","input","region","id","subregions","subregion","reset","filtered","searchCountriesByName","selectCountry","filterCountriesByRegion","filterCountriesBySubRegion","toggleUnit","show","console","log","noCapitals","item","name","antarctica","c","map","capital","bouvetIsland","heardIsland","macau","usMinor","southGeorgia","frenchSouthern","otherCountries","nCountries","sortedCountries","sort","sortF","newState","toSearch","toLowerCase","startsWith","reg","regions","r","selectRegion","regionFiltered","subregionFiltered","direction","sorted"],"mappings":"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","file":"static/js/main.71eadb55.chunk.js","sourcesContent":["import countryService from '../services/countriesData'\n\nconst initialState = {\n  news: { status: '?', totalResults: 0, articles: [] },\n  bbox: [],\n  featuresDetails: [],\n}\n\nconst countryNewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'COUNTRY_NEWS':\n      if (action.data.toString().includes('Error')) {\n        return { data: 'no news available' }\n      } else {\n        return { ...state, news: action.data }\n      }\n    default:\n      return state\n  }\n}\n\nexport const getCountryNews = (country) => {\n  return async (dispatch) => {\n    const countryData = await countryService.getCountryNews(country)\n    dispatch({\n      type: 'COUNTRY_NEWS',\n      data: countryData,\n    })\n  }\n}\n\nexport default countryNewsReducer\n","import countryService from '../services/countriesData'\n\nconst weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getWeather = (location) => {\n  return async (dispatch) => {\n    const weather = await countryService.getWeather(location)\n\n    dispatch({\n      type: 'GET_WEATHER',\n      data: weather,\n    })\n  }\n}\n\nexport default weatherReducer\n","import countryService from '../services/countriesData'\n\nconst timeZoneReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_TIME_ZONE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getTimeZone = (location) => {\n  return async (dispatch) => {\n    const timeZone = await countryService.getTimeZone(location)\n    dispatch({\n      type: 'GET_TIME_ZONE',\n      data: timeZone,\n    })\n  }\n}\n\nexport default timeZoneReducer\n","import countryService from '../services/countriesData'\n\nconst initialState = {\n  bbox: [],\n}\n\nconst countryDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'COUNTRY_BBOX':\n      return { ...state, bbox: action.data }\n    default:\n      return state\n  }\n}\n\nexport const getCountryBbox = (country) => {\n  return async (dispatch) => {\n    const countryBbox = await countryService.getCountryBbox(country)\n    dispatch({\n      type: 'COUNTRY_BBOX',\n      data: countryBbox,\n    })\n  }\n}\n\nexport default countryDataReducer\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/countries'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getWeather = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/weather/lat/${params.location[0]}/lng/${params.location[1]}/unit/${params.unit}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getTimeZone = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/time/lat/${params.location[0]}/lng/${params.location[1]}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getCountryNews = async (params) => {\r\n  const res = await axios.get(`/api/countries/news/${params}`)\r\n  return res.data\r\n}\r\n\r\nconst getCountryBbox = async (params) => {\r\n  const res = await axios.get(`/api/countries/map/${params}`)\r\n  return res.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getWeather,\r\n  getTimeZone,\r\n  getCountryNews,\r\n  getCountryBbox,\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport loadable from '@loadable/component'\r\nimport { initializeCountries } from './reducers/countriesReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Countries = loadable(() => import('./pages/Countries'))\r\nconst CountriesMobile = loadable(() => import('./pages/CountriesMobile'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  const countries = useSelector((state) => {\r\n    return state.countries.initialCountries\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (countries.length === 0) {\r\n      dispatch(initializeCountries())\r\n      window.localStorage.setItem('direction', 'ascending')\r\n      window.localStorage.setItem('sort key', 'name')\r\n    }\r\n  }, [dispatch, countries])\r\n\r\n  return countries.length > 0 ? (\r\n    isMobile ? (\r\n      <CountriesMobile />\r\n    ) : (\r\n      <Countries />\r\n    )\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport countriesReducer, {\n  unitReducer,\n  menuReducer,\n} from './reducers/countriesReducer'\nimport countryDataReducer from './reducers/countryDataReducer'\nimport countryNewsReducer from './reducers/countryNewsReducer'\nimport weatherReducer from './reducers/weatherReducer'\nimport timeZoneReducer from './reducers/timeZoneReducer'\n\nconst reducer = combineReducers({\n  countries: countriesReducer,\n  country: countryDataReducer,\n  news: countryNewsReducer,\n  unit: unitReducer,\n  weather: weatherReducer,\n  time: timeZoneReducer,\n  menu: menuReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './assets/css/semantic.css'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'core-js'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\n/* const styleLink = document.createElement('link')\r\nstyleLink.rel = 'stylesheet'\r\nstyleLink.href =\r\n  'https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css'\r\ndocument.head.appendChild(styleLink)  */\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//  \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\",\r\n// local proxy: \"proxy\": \"http://localhost:3001/\"\r\n// backend: https://github.com/I-keep-trying/my-app-backend\r\n","const sortCountries = (a, b) => {\n  const key = window.localStorage.getItem('sort key')\n  const dir = window.localStorage.getItem('direction')\n\n  if (key === 'area' || key === 'population') {\n    if (a[key] < b[key]) {\n      return dir === 'ascending' ? -1 : 1\n    }\n    if (a[key] > b[key]) {\n      return dir === 'ascending' ? 1 : -1\n    }\n  } else if (key === 'capital') {\n    return dir === 'ascending'\n      ? a[key][0].localeCompare(b[key][0])\n      : b[key][0].localeCompare(a[key][0])\n  } else if (key === 'name') {\n    return dir === 'ascending'\n      ? a[key].common.localeCompare(b[key].common)\n      : b[key].common.localeCompare(a[key].common)\n  } else {\n    return dir === 'ascending'\n      ? a[key].localeCompare(b[key])\n      : b[key].localeCompare(a[key])\n  }\n}\n\nexport default sortCountries\n","import countryService from '../services/countriesData'\r\nimport regions from '../regions'\r\nimport sortF from '../util/sortCountries'\r\n\r\nconst initialState = {\r\n  initialCountries: [],\r\n  filter: {\r\n    input: '',\r\n    country: '',\r\n    region: {\r\n      id: 'FZUe47mEY9PCOzYmMxzYY',\r\n      region: 'All',\r\n      subregions: [],\r\n    },\r\n    subregion: '',\r\n    reset: false,\r\n  },\r\n  filtered: [],\r\n}\r\n\r\n/* ---------- Countries Reducer ------------- */\r\nconst countriesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_COUNTRIES':\r\n      // Find countries from restcountries.com api with missing keys\r\n      const noCapitals = action.data.filter(\r\n        (item) =>\r\n          item.name.common === 'Antarctica' ||\r\n          item.name.common === 'Bouvet Island' ||\r\n          item.name.common === 'Heard Island and McDonald Islands' ||\r\n          item.name.common === 'Macau' ||\r\n          item.name.common === 'United States Minor Outlying Islands' ||\r\n          item.name.common === 'South Georgia' ||\r\n          item.name.common === 'French Southern and Antarctic Lands'\r\n      )\r\n      // Create replacements inserting missing keys/values\r\n      const antarctica = noCapitals\r\n        .filter((c) => c.name.common === 'Antarctica')\r\n        .map((c) => {\r\n          return { ...c, capital: ['No Capital City'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const bouvetIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Bouvet Island')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Oslo'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const heardIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Heard Island and McDonald Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Bern'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const macau = noCapitals\r\n        .filter((c) => c.name.common === 'Macau')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Macau'] }\r\n        })\r\n\r\n      const usMinor = noCapitals\r\n        .filter((c) => c.name.common === 'United States Minor Outlying Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Washington DC'] }\r\n        })\r\n\r\n      const southGeorgia = noCapitals\r\n        .filter((c) => c.name.common === 'South Georgia')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      const frenchSouthern = noCapitals\r\n        .filter((c) => c.name.common === 'French Southern and Antarctic Lands')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      // Remove defective country objects\r\n      const otherCountries = action.data.filter(\r\n        (item) =>\r\n          item.name.common !== 'Antarctica' &&\r\n          item.name.common !== 'Bouvet Island' &&\r\n          item.name.common !== 'Heard Island and McDonald Islands' &&\r\n          item.name.common !== 'Macau' &&\r\n          item.name.common !== 'United States Minor Outlying Islands' &&\r\n          item.name.common !== 'South Georgia' &&\r\n          item.name.common !== 'French Southern and Antarctic Lands'\r\n      )\r\n\r\n      // Insert replacement objects with keys/values in place\r\n      const nCountries = [\r\n        ...otherCountries,\r\n        southGeorgia[0],\r\n        heardIsland[0],\r\n        macau[0],\r\n        usMinor[0],\r\n        antarctica[0],\r\n        bouvetIsland[0],\r\n        frenchSouthern[0],\r\n      ]\r\n\r\n      const sortedCountries = [...nCountries].sort(sortF)\r\n\r\n      return {\r\n        ...state,\r\n        initialCountries: nCountries,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: {\r\n            id: 'FZUe47mEY9PCOzYmMxzYY',\r\n            region: 'All',\r\n            subregions: [],\r\n          },\r\n          subregion: '',\r\n          reset: false,\r\n        },\r\n        filtered: sortedCountries,\r\n      }\r\n    case 'SEARCH_COUNTRIES':\r\n      if (action.input === '') {\r\n        const sortedCountries = state.initialCountries.sort(sortF)\r\n\r\n        const newState = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            input: '',\r\n            country: '',\r\n            region: {\r\n              id: 'FZUe47mEY9PCOzYmMxzYY',\r\n              region: 'All',\r\n              subregions: [],\r\n            },\r\n            subregion: '',\r\n          },\r\n          filtered: sortedCountries,\r\n        }\r\n\r\n        return newState\r\n      } else if (action.input) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            input: action.input.toLowerCase(),\r\n            country: '',\r\n            region: {\r\n              id: 'FZUe47mEY9PCOzYmMxzYY',\r\n              region: 'All',\r\n              subregions: [],\r\n            },\r\n            subregion: '',\r\n          },\r\n        }\r\n        /* \r\nUnpopular opinion: I don't like the way most forms do filtering. If I'm searching for\r\n'amsterdam', I will start typing, 'a', so I expect all results to begin with 'a', not \r\ncontain 'a' somewhere; almost every name has an 'a' in it, so IMO, that's a silly \r\nway to do searches.\r\n*/\r\n        /* \r\nSomething I did here is filter all countries with every search, even if a region and/or\r\nsubregion is already selected. Not 100% convinced that's the right way to do it, but\r\nany alternatives would be more complicated.\r\n*/\r\n        const filtered = toSearch.initialCountries.filter((c) =>\r\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\r\n        )\r\n        return filtered.length === 0\r\n          ? { ...toSearch, filtered: [] }\r\n          : { ...toSearch, filtered: filtered }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'SELECT_A_COUNTRY':\r\n      if (action.country) {\r\n        const reg = regions.filter((r) => r.region === action.country.region)\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            country: action.country.name.common.toLowerCase(),\r\n            region: reg[0],\r\n            subregion: action.country.subregion,\r\n          },\r\n        }\r\n        const filtered = toSearch.initialCountries.filter(\r\n          (c) =>\r\n            c.name.common.toLowerCase() ===\r\n            toSearch.filter.country.toLowerCase()\r\n        )\r\n        return { ...toSearch, filtered: filtered }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'FILTER_BY_REGION':\r\n      if (action.region) {\r\n        const selectRegion = {\r\n          ...state,\r\n          filter: { ...state.filter, region: action.region, subregion: '' },\r\n        }\r\n\r\n        const regionFiltered =\r\n          selectRegion.filter.region.region.toLowerCase() === 'all'\r\n            ? state.initialCountries\r\n            : state.initialCountries.filter(\r\n                (c) =>\r\n                  c.region.toLowerCase() ===\r\n                  selectRegion.filter.region.region.toLowerCase()\r\n              )\r\n\r\n        return {\r\n          ...selectRegion,\r\n          filtered: regionFiltered.sort(sortF),\r\n          filter: selectRegion.filter,\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'FILTER_BY_SUBREGION':\r\n      if (action.subregion) {\r\n        const subregionFiltered = state.initialCountries.filter(\r\n          (c) => c.subregion.toLowerCase() === action.subregion.toLowerCase()\r\n        )\r\n        const newState = {\r\n          ...state,\r\n          filter: { ...state.filter, subregion: action.subregion },\r\n          filtered: subregionFiltered.sort(sortF),\r\n        }\r\n        return newState\r\n      } else {\r\n        return state\r\n      }\r\n\r\n    case 'SORT_COUNTRIES':\r\n      const direction =\r\n        window.localStorage.getItem('direction') === 'ascending'\r\n          ? 'descending'\r\n          : 'ascending'\r\n\r\n      const key = action.key\r\n\r\n      window.localStorage.setItem('direction', direction)\r\n      window.localStorage.setItem('sort key', key)\r\n\r\n      const sorted = [...state.filtered].sort(sortF)\r\n\r\n      return { ...state, filtered: sorted }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* ------------ Countries Reducer Actions ------------- */\r\n\r\nexport const initializeCountries = () => {\r\n  return async (dispatch) => {\r\n    const countries = await countryService.getAll()\r\n    dispatch({\r\n      type: 'INIT_COUNTRIES',\r\n      data: countries,\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchCountriesByName = (input) => {\r\n  return {\r\n    type: 'SEARCH_COUNTRIES',\r\n    input,\r\n  }\r\n}\r\n\r\nexport const sortCountries = (key) => {\r\n  return {\r\n    type: 'SORT_COUNTRIES',\r\n    key,\r\n  }\r\n}\r\n\r\nexport const selectCountry = (country) => {\r\n  return {\r\n    type: 'SELECT_A_COUNTRY',\r\n    country,\r\n  }\r\n}\r\n\r\nexport const filterCountriesByRegion = (region) => {\r\n  return {\r\n    type: 'FILTER_BY_REGION',\r\n    region,\r\n  }\r\n}\r\n\r\nexport const filterCountriesBySubRegion = (subregion) => {\r\n  return {\r\n    type: 'FILTER_BY_SUBREGION',\r\n    subregion,\r\n  }\r\n}\r\n\r\n/* -------------Unit Reducer ------------------ */\r\nexport const unitReducer = (state = { unit: 'metric' }, action) => {\r\n  switch (action.type) {\r\n    case 'UNIT_TOGGLE':\r\n      return { ...state, unit: action.unit }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleUnit = (unit) => {\r\n  return {\r\n    type: 'UNIT_TOGGLE',\r\n    unit: unit,\r\n  }\r\n}\r\n\r\n/* ------------- Menu Reducer ------------------ */\r\nexport const menuReducer = (state = { show: false }, action) => {\r\n  switch (action.type) {\r\n    case 'MENU_TOGGLE':\r\n      console.log('action.show', action.show)\r\n      const show = state.show === false ? true : false\r\n      return { ...state, show: show }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleMenu = (show) => {\r\n  return {\r\n    type: 'MENU_TOGGLE',\r\n    show,\r\n  }\r\n}\r\n\r\nexport default countriesReducer\r\n"],"sourceRoot":""}