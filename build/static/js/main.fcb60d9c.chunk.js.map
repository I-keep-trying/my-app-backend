{"version":3,"sources":["reducers/countryDataReducer.js","reducers/weatherReducer.js","reducers/timeZoneReducer.js","App.js","store.js","index.js","services/countriesData.js","reducers/countryReducer.js"],"names":["initialState","news","status","totalResults","articles","getCountryNews","country","dispatch","a","countryService","countryData","type","data","resetCountryNews","countryDataReducer","state","action","toString","includes","getWeather","location","weather","weatherReducer","getTimeZone","timeZone","timeZoneReducer","Countries","loadable","CountriesMobile","App","useDispatch","countries","useSelector","initialCountries","useEffect","undefined","initializeCountries","isMobile","reducer","combineReducers","countryReducer","unit","unitReducer","time","menu","menuReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","getAll","axios","get","response","params","res","getCountry","searchCountriesByName","input","filterCountries","filterCountriesByRegion","region","filterCountriesBySubRegion","subregion","sortCountries","key","toggleUnit","show","toggleMenu","noCapitals","filter","item","name","common","antarctica","c","map","capital","bouvetIsland","heardIsland","macau","usMinor","southGeorgia","frenchSouthern","otherCountries","nCountries","b","window","localStorage","getItem","dir","localeCompare","sort","reset","filtered","sortConfig","direction","toSearch","toLowerCase","startsWith","selectRegion","regionFiltered","selectSubRegion","subregionFiltered","s","newState","setItem","sortableItems","sortedState"],"mappings":"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","file":"static/js/main.fcb60d9c.chunk.js","sourcesContent":["import countryService from '../services/countriesData'\n\nconst initialState = {\n  news: { status: '?', totalResults: 0, articles: [] },\n}\n\nconst countryDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'COUNTRY_NEWS':\n      if (action.data.toString().includes('Error')) {\n        return { data: 'no news available' }\n      } else {\n        return { news: action.data }\n      }\n    case 'COUNTRY_NEWS_RESET':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport const getCountryNews = (country) => {\n  return async (dispatch) => {\n    const countryData = await countryService.getCountryNews(country)\n    dispatch({\n      type: 'COUNTRY_NEWS',\n      data: countryData,\n    })\n  }\n}\n\nexport const resetCountryNews = (data) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'COUNTRY_NEWS_RESET',\n      data,\n    })\n  }\n}\n\nexport default countryDataReducer\n","import countryService from '../services/countriesData'\n\nconst weatherReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_WEATHER':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getWeather = (location) => {\n  return async (dispatch) => {\n    const weather = await countryService.getWeather(location)\n\n    dispatch({\n      type: 'GET_WEATHER',\n      data: weather,\n    })\n  }\n}\n\nexport default weatherReducer\n","import countryService from '../services/countriesData'\n\nconst timeZoneReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_TIME_ZONE':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const getTimeZone = (location) => {\n  return async (dispatch) => {\n    const timeZone = await countryService.getTimeZone(location)\n    dispatch({\n      type: 'GET_TIME_ZONE',\n      data: timeZone,\n    })\n  }\n}\n\nexport default timeZoneReducer\n\n/* \nlocation ? (2) [-53.1, 72.51666666]\ntimeZoneReducer.js:13 location for time zone \n{location: Array(2)}\nlocation: (2) [-53.1, 72.51666666]\n0: -53.1\n1: 72.51666666\nlength: 2\nlastIndex: (...)lastItem: (...)[[Prototype]]: Array(0)[[Prototype]]: Object\n*/","import React, { useEffect } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport loadable from '@loadable/component'\r\nimport { initializeCountries } from './reducers/countryReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Countries = loadable(() => import('./pages/Countries'))\r\nconst CountriesMobile = loadable(() => import('./pages/CountriesMobile'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const countries = useSelector((state) => {\r\n    return state.countries.initialCountries\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (countries === undefined) {\r\n      dispatch(initializeCountries())\r\n    }\r\n  }, [dispatch, countries])\r\n\r\n  return countries !== undefined ? (\r\n    isMobile ? (\r\n      <CountriesMobile />\r\n    ) : (\r\n      <Countries />\r\n    )\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport countryReducer, {\n  unitReducer,\n  menuReducer,\n} from './reducers/countryReducer'\nimport countryDataReducer from './reducers/countryDataReducer'\nimport weatherReducer from './reducers/weatherReducer'\nimport timeZoneReducer from './reducers/timeZoneReducer'\n\nconst reducer = combineReducers({\n  countries: countryReducer,\n  country: countryDataReducer,\n  unit: unitReducer,\n  weather: weatherReducer,\n  time: timeZoneReducer,\n  menu: menuReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './assets/css/semantic.css'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'core-js'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\n/* const styleLink = document.createElement('link')\r\nstyleLink.rel = 'stylesheet'\r\nstyleLink.href =\r\n  'https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css'\r\ndocument.head.appendChild(styleLink) */\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n//  \"proxy\": \"https://sheltered-scrubland-08732.herokuapp.com\",\r\n// local proxy: \"proxy\": \"http://localhost:3001/\"\r\n// backend: https://github.com/I-keep-trying/my-app-backend\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/countries'\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getWeather = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/weather/lat/${params.location[0]}/lng/${params.location[1]}/unit/${params.unit}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getTimeZone = async (params) => {\r\n  const res = await axios.get(\r\n    `/api/time/lat/${params.location[0]}/lng/${params.location[1]}`\r\n  )\r\n  return res.data\r\n}\r\n\r\nconst getCountryNews = async (params) => {\r\n\r\n  const res = await axios.get(`/api/countries/news/${params}`)\r\n  return res.data\r\n}\r\n\r\nconst getCountry = async (params) => {\r\n  const res = await axios.get(`/api/countries/name/${params}`)\r\n  return res.data\r\n}\r\n\r\nexport default { getAll, getWeather, getTimeZone, getCountry, getCountryNews }\r\n","import countryService from '../services/countriesData'\r\n\r\n/* ---------- Countries Reducer ------------- */\r\nconst countryReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_COUNTRIES':\r\n      // Find countries from restcountries.com api with missing keys\r\n      const noCapitals = action.data.filter(\r\n        (item) =>\r\n          item.name.common === 'Antarctica' ||\r\n          item.name.common === 'Bouvet Island' ||\r\n          item.name.common === 'Heard Island and McDonald Islands' ||\r\n          item.name.common === 'Macau' ||\r\n          item.name.common === 'United States Minor Outlying Islands' ||\r\n          item.name.common === 'South Georgia' ||\r\n          item.name.common === 'French Southern and Antarctic Lands'\r\n      )\r\n      // Create replacements inserting missing keys\r\n      const antarctica = noCapitals\r\n        .filter((c) => c.name.common === 'Antarctica')\r\n        .map((c) => {\r\n          return { ...c, capital: ['No Capital City'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const bouvetIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Bouvet Island')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Oslo'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const heardIsland = noCapitals\r\n        .filter((c) => c.name.common === 'Heard Island and McDonald Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Bern'], subregion: 'Antarctic' }\r\n        })\r\n\r\n      const macau = noCapitals\r\n        .filter((c) => c.name.common === 'Macau')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Macau'] }\r\n        })\r\n\r\n      const usMinor = noCapitals\r\n        .filter((c) => c.name.common === 'United States Minor Outlying Islands')\r\n        .map((c) => {\r\n          return { ...c, capital: ['Washington DC'] }\r\n        })\r\n\r\n      const southGeorgia = noCapitals\r\n        .filter((c) => c.name.common === 'South Georgia')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      const frenchSouthern = noCapitals\r\n        .filter((c) => c.name.common === 'French Southern and Antarctic Lands')\r\n        .map((c) => {\r\n          return { ...c, subregion: 'Antarctic' }\r\n        })\r\n\r\n      // Remove defective country objects\r\n      const otherCountries = action.data.filter(\r\n        (item) =>\r\n          item.name.common !== 'Antarctica' &&\r\n          item.name.common !== 'Bouvet Island' &&\r\n          item.name.common !== 'Heard Island and McDonald Islands' &&\r\n          item.name.common !== 'Macau' &&\r\n          item.name.common !== 'United States Minor Outlying Islands' &&\r\n          item.name.common !== 'South Georgia' &&\r\n          item.name.common !== 'French Southern and Antarctic Lands'\r\n      )\r\n\r\n      // Insert replacement objects with keys in place\r\n      const nCountries = [\r\n        ...otherCountries,\r\n        southGeorgia[0],\r\n        heardIsland[0],\r\n        macau[0],\r\n        usMinor[0],\r\n        antarctica[0],\r\n        bouvetIsland[0],\r\n        frenchSouthern[0],\r\n      ]\r\n\r\n      const sortCountries = (a, b) => {\r\n        const key =\r\n          window.localStorage.getItem('sort key') === null\r\n            ? 'name'\r\n            : window.localStorage.getItem('sort key')\r\n\r\n        const dir =\r\n          window.localStorage.getItem('direction') === null\r\n            ? 'ascending'\r\n            : window.localStorage.getItem('direction')\r\n\r\n        if (key === 'area' || key === 'population') {\r\n          if (a[key] < b[key]) {\r\n            return dir === 'ascending' ? -1 : 1\r\n          }\r\n          if (a[key] > b[key]) {\r\n            return dir === 'ascending' ? 1 : -1\r\n          }\r\n        } else if (key === 'capital') {\r\n    //      console.log('a.key', a[key][0])\r\n          return dir === 'ascending'\r\n            ? a[key][0].localeCompare(b[key][0])\r\n            : b[key][0].localeCompare(a[key][0])\r\n        } else if (key === 'name') {\r\n          return dir === 'ascending'\r\n            ? a[key].common.localeCompare(b[key].common)\r\n            : b[key].common.localeCompare(a[key].common)\r\n        } else {\r\n          return dir === 'ascending'\r\n            ? a[key].localeCompare(b[key].common)\r\n            : b[key].localeCompare(a[key].common)\r\n        }\r\n      }\r\n\r\n      const initialCountries = nCountries.sort(sortCountries)\r\n\r\n      return {\r\n        initialCountries,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: 'All',\r\n          subregion: '',\r\n          reset: false,\r\n        },\r\n        filtered: initialCountries,\r\n        sortConfig: {\r\n          key:\r\n            window.localStorage.getItem('sort key') !== null\r\n              ? window.localStorage.getItem('sort key')\r\n              : 'name',\r\n          direction:\r\n            window.localStorage.getItem('direction') !== null\r\n              ? window.localStorage.getItem('direction')\r\n              : 'ascending',\r\n        },\r\n      }\r\n    case 'FILTER_COUNTRIES':\r\n      if (action.input === '') {\r\n        return {\r\n          initialCountries,\r\n          filter: {\r\n            input: '',\r\n            country: '',\r\n            region: 'All',\r\n            subregion: '',\r\n            reset: false,\r\n          },\r\n          filtered: initialCountries,\r\n          sortConfig: {\r\n            key: 'name',\r\n            direction: 'ascending',\r\n          },\r\n        }\r\n      } else if (action.input) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            input: action.input.toLowerCase(),\r\n          },\r\n        }\r\n\r\n        const filtered = toSearch.initialCountries.filter((c) =>\r\n          c.name.common.toLowerCase().startsWith(toSearch.filter.input)\r\n        )\r\n\r\n        return { ...toSearch, filtered: filtered }\r\n      } else if (action.country) {\r\n        const toSearch = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            country: action.country.name.common.toLowerCase(),\r\n            region: action.country.region,\r\n            subregion: action.country.subregion,\r\n          },\r\n        }\r\n        const filtered = toSearch.initialCountries.filter(\r\n          (c) =>\r\n            c.name.common.toLowerCase() ===\r\n            toSearch.filter.country.toLowerCase()\r\n        )\r\n        return { ...toSearch, filtered: filtered }\r\n      } else if (action.region) {\r\n        const selectRegion = {\r\n          ...state,\r\n          filter: { ...state.filter, region: action.region.toLowerCase() },\r\n        }\r\n        const regionFiltered =\r\n          selectRegion.filter.region === 'all'\r\n            ? selectRegion.initialCountries\r\n            : selectRegion.initialCountries.filter(\r\n                (c) => c.region.toLowerCase() === selectRegion.filter.region\r\n              )\r\n\r\n        return {\r\n          ...selectRegion,\r\n          filtered: regionFiltered,\r\n          filter: {\r\n            ...selectRegion.filter,\r\n            input: '',\r\n            country: '',\r\n            region: action.region.toLowerCase(),\r\n            subregion: '',\r\n          },\r\n        }\r\n      } else if (action.subregion) {\r\n        const selectSubRegion = {\r\n          ...state,\r\n          filter: {\r\n            ...state.filter,\r\n            subregion: action.subregion.toLowerCase(),\r\n          },\r\n        }\r\n        const subregionFiltered = selectSubRegion.initialCountries.filter(\r\n          (s) => s.subregion?.toLowerCase() === selectSubRegion.filter.subregion\r\n        )\r\n        //     console.log('subregionFiltered', subregionFiltered)\r\n        const newState = { ...selectSubRegion, filtered: subregionFiltered }\r\n        return newState\r\n      } else {\r\n        return state\r\n      }\r\n    case 'RESET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter: {\r\n          input: '',\r\n          country: '',\r\n          region: 'All',\r\n          subregion: '',\r\n          reset: true,\r\n        },\r\n      }\r\n    case 'SORT_COUNTRIES':\r\n      const direction =\r\n        state.sortConfig.direction === 'ascending' ? 'descending' : 'ascending'\r\n      window.localStorage.setItem('direction', direction)\r\n\r\n      let sortableItems = state.filtered\r\n\r\n      if (action.key === 'area' || action.key === 'population') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key] - b[action.key]\r\n            : b[action.key] - a[action.key]\r\n        )\r\n      } else if (action.key === 'name') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key].common.localeCompare(b[action.key].common)\r\n            : b[action.key].common.localeCompare(a[action.key].common)\r\n        )\r\n      } else if (action.key === 'capital') {\r\n        sortableItems.sort((a, b) =>\r\n          direction === 'ascending'\r\n            ? a[action.key][0].localeCompare(b[action.key][0])\r\n            : b[action.key][0].localeCompare(a[action.key][0])\r\n        )\r\n      } else {\r\n        sortableItems.sort((a, b) =>\r\n          a[action.key] && direction === 'ascending'\r\n            ? a[action.key].localeCompare(b[action.key])\r\n            : b[action.key].localeCompare(a[action.key])\r\n        )\r\n      }\r\n      const sortedState = {\r\n        ...state,\r\n        filtered: sortableItems,\r\n        sortConfig: { key: action.key, direction: direction },\r\n      }\r\n      return sortedState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/* ------------ Countries Reducer Actions ------------- */\r\n\r\nexport const initializeCountries = () => {\r\n  return async (dispatch) => {\r\n    const countries = await countryService.getAll()\r\n    dispatch({\r\n      type: 'INIT_COUNTRIES',\r\n      data: countries,\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetFilter = (reset) => {\r\n  return {\r\n    type: 'RESET_FILTER',\r\n    reset: reset,\r\n  }\r\n}\r\n\r\nexport const searchCountriesByName = (input) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    input,\r\n  }\r\n}\r\n\r\nexport const searchCountriesByCapital = (inputCap) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    inputCap,\r\n  }\r\n}\r\n\r\nexport const filterCountries = (country) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    country,\r\n  }\r\n}\r\n\r\nexport const filterCountriesByRegion = (region) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    region,\r\n  }\r\n}\r\n\r\nexport const filterCountriesBySubRegion = (subregion) => {\r\n  return {\r\n    type: 'FILTER_COUNTRIES',\r\n    subregion,\r\n  }\r\n}\r\n\r\nexport const sortCountries = (key) => {\r\n  return {\r\n    type: 'SORT_COUNTRIES',\r\n    key,\r\n  }\r\n}\r\n\r\n/* -------------Unit Reducer ------------------ */\r\nexport const unitReducer = (state = { unit: 'metric' }, action) => {\r\n  switch (action.type) {\r\n    case 'UNIT_TOGGLE':\r\n      return { ...state, unit: action.unit }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleUnit = (unit) => {\r\n  return {\r\n    type: 'UNIT_TOGGLE',\r\n    unit: unit,\r\n  }\r\n}\r\n\r\n/* ------------- Menu Reducer ------------------ */\r\nexport const menuReducer = (state = { show: false }, action) => {\r\n  switch (action.type) {\r\n    case 'MENU_TOGGLE':\r\n      const show = state.show === false ? true : false\r\n      return { ...state, show: show }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const toggleMenu = (show) => {\r\n  return {\r\n    type: 'MENU_TOGGLE',\r\n    show: show,\r\n  }\r\n}\r\n\r\nexport default countryReducer\r\n"],"sourceRoot":""}