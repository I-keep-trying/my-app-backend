{"version":3,"sources":["components/MenuMobile.js"],"names":["CountriesMenuMobile","useState","id","region","subregions","setRegion","dispatch","useDispatch","state","useSelector","handleRegionClick","reg","filterCountriesByRegion","attached","vertical","fluid","countries","filter","toLowerCase","regions","map","r","Item","header","active","onClick","resetFilter","Menu","s","i","subregion","sub","filterCountriesBySubRegion"],"mappings":"ijCA8FeA,UAnFa,WAC1B,MAA4BC,mBAAS,CACnCC,GAAI,wBACJC,OAAQ,MACRC,WAAY,KAHd,mBAAOD,EAAP,KAAeE,EAAf,KAMMC,EAAWC,cACXC,EAAQC,aAAY,SAACD,GAAD,OAAWA,KAE/BE,EAAoB,SAACC,GACzBL,EAASM,YAAwBD,EAAIR,SACrCE,EAAUM,IAOZ,OACE,mCAEE,cAAC,IAAD,CAAME,UAAQ,EAACC,UAAQ,EAACC,OAAK,EAA7B,SACE,qCACmD,QAAhDP,EAAMQ,UAAUC,OAAOd,OAAOe,cAC7B,mCACGC,EAAQC,KAAI,SAACC,GAAD,OACX,cAAC,IAAKC,KAAN,CACEC,OAAqB,QAAbF,EAAElB,OAEVqB,OACEhB,EAAMQ,UAAUC,OAAOd,OAAOe,gBAC9BG,EAAElB,OAAOe,cAEXO,QAAS,kBAAMf,EAAkBW,IAPnC,SASgB,QAAbA,EAAElB,OAAmB,6BAA+BkB,EAAElB,QAPlDkB,EAAEnB,SAYb,qCACE,cAAC,IAAKoB,KAAN,CACEE,OAAwD,QAAhDhB,EAAMQ,UAAUC,OAAOd,OAAOe,cACtCO,QAAS,kBAAMnB,EAASoB,gBAF1B,yBAMCP,EAAQC,KAAI,SAACC,GACZ,GAAIA,EAAElB,OAAOe,gBAAkBV,EAAMQ,UAAUC,OAAOd,OACpD,OACE,cAAC,IAAKmB,KAAN,CAAsBG,QAAS,kBAAMf,EAAkBW,IAAvD,SACGA,EAAElB,QADWkB,EAAEnB,UAQqB,QAAhDM,EAAMQ,UAAUC,OAAOd,OAAOe,cAA0B,KACvD,mCACE,cAAC,IAAKS,KAAN,UACGxB,EAAOC,WAAWgB,KAAI,SAACQ,EAAGC,GAAJ,OACrB,cAAC,IAAKP,KAAN,CAEEE,OACEhB,EAAMQ,UAAUC,OAAOa,UAAUZ,gBACjCU,EAAEV,cAEJO,QAAS,kBAtDGM,EAsDwBH,OArDpDtB,EAAS0B,YAA2BD,IADT,IAACA,GAgDd,SAQGH,GAPIC","file":"static/js/22.c9639217.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Menu } from 'semantic-ui-react'\n\nimport {\n  filterCountriesByRegion,\n  filterCountriesBySubRegion,\n  resetFilter,\n} from '../reducers/countryReducer'\nimport regions from '../regions'\n\nconst CountriesMenuMobile = () => {\n  const [region, setRegion] = useState({\n    id: 'FZUe47mEY9PCOzYmMxzYY',\n    region: 'All',\n    subregions: [],\n  })\n\n  const dispatch = useDispatch()\n  const state = useSelector((state) => state)\n\n  const handleRegionClick = (reg) => {\n    dispatch(filterCountriesByRegion(reg.region))\n    setRegion(reg)\n  }\n\n  const handleSubregionClick = (sub) => {\n    dispatch(filterCountriesBySubRegion(sub))\n  }\n\n  return (\n    <>\n      {/* Regions */}\n      <Menu attached vertical fluid>\n        <>\n          {state.countries.filter.region.toLowerCase() === 'all' ? (\n            <>\n              {regions.map((r) => (\n                <Menu.Item\n                  header={r.region === 'All' ? true : false}\n                  key={r.id}\n                  active={\n                    state.countries.filter.region.toLowerCase() ===\n                    r.region.toLowerCase()\n                  }\n                  onClick={() => handleRegionClick(r)}\n                >\n                  {r.region === 'All' ? 'Filter By Region/Subregion' : r.region}\n                </Menu.Item>\n              ))}\n            </>\n          ) : (\n            <>\n              <Menu.Item\n                active={state.countries.filter.region.toLowerCase() === 'all'}\n                onClick={() => dispatch(resetFilter())}\n              >\n                All Regions\n              </Menu.Item>\n              {regions.map((r) => {\n                if (r.region.toLowerCase() === state.countries.filter.region) {\n                  return (\n                    <Menu.Item key={r.id} onClick={() => handleRegionClick(r)}>\n                      {r.region}\n                    </Menu.Item>\n                  )\n                }\n              })}\n            </>\n          )}\n          {state.countries.filter.region.toLowerCase() === 'all' ? null : (\n            <>\n              <Menu.Menu>\n                {region.subregions.map((s, i) => (\n                  <Menu.Item\n                    key={i}\n                    active={\n                      state.countries.filter.subregion.toLowerCase() ===\n                      s.toLowerCase()\n                    }\n                    onClick={() => handleSubregionClick(s)}\n                  >\n                    {s}\n                  </Menu.Item>\n                ))}\n              </Menu.Menu>\n            </>\n          )}\n        </>\n      </Menu>\n    </>\n  )\n}\n\nexport default CountriesMenuMobile\n"],"sourceRoot":""}