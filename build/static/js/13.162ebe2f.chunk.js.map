{"version":3,"sources":["services/sortableTable.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","components/Table.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js"],"names":["useSortableData1","items","useState","key","direction","sortConfig","setSortConfig","window","localStorage","setItem","now","Date","getTime","setupTime","getItem","clear","useMemo","sortableItems","sort","a","b","common","localeCompare","requestSort","SegmentGroup","props","children","className","compact","content","horizontal","piled","raised","size","stacked","classes","cx","useKeyOnly","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","placeholder","padded","secondary","tertiary","textAlign","vertical","useKeyOrValueAndKey","useTextAlignProp","useValueAndKey","Group","Inline","TableBody","unit","dispatch","useDispatch","Body","map","item","areaConvert","Math","round","area","Row","onClick","country","filterCountries","Cell","cca3","srcSet","flags","svg","src","isIE","png","alt","bordered","name","undefined","capital","continents","region","subregion","population","toLocaleString","CountriesTable1","state","useSelector","countriesFiltered","countries","filtered","length","initialCountries","useSortableData","sortIcons","id","sortable","selectable","unstackable","Header","filter","toLowerCase","fieldName","HeaderCell","fallback","CountriesTable","memo","defaultProps","as","TableCell","active","collapsing","error","icon","negative","positive","singleLine","verticalAlign","warning","width","useVerticalAlignProp","useWidthProp","Icon","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","TableRow","cellAs","cells","_map","cell","Table","celled","columns","definition","fixed","footerRow","headerRow","headerRows","renderBodyRow","stackable","striped","structured","tableData","headerShorthandOptions","headerElement","data","index","Footer"],"mappings":"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","file":"static/js/13.162ebe2f.chunk.js","sourcesContent":["import { useState, useMemo } from 'react'\r\n\r\nconst useSortableData1 = (items) => {\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: 'name',\r\n    direction: 'ascending',\r\n  })\r\n  // set initial sort\r\n  window.localStorage.setItem('sort key', sortConfig.key)\r\n  window.localStorage.setItem('direction', sortConfig.direction)\r\n\r\n  // set expiration for local storage to clear\r\n  const now = new Date().getTime()\r\n  const setupTime = localStorage.getItem('setupTime')\r\n  if (setupTime == null) {\r\n    localStorage.setItem('setupTime', now)\r\n  } else {\r\n    if (now - setupTime > 1 * 60 * 60 * 1000) {\r\n      localStorage.clear()\r\n      localStorage.setItem('setupTime', now)\r\n    }\r\n  }\r\n\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items]\r\n    if (sortConfig.key === 'area' || sortConfig.key === 'population') {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? -1 : 1\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? 1 : -1\r\n        }\r\n        return 0\r\n      })\r\n    } else if (sortConfig.key === 'name') {\r\n      sortableItems.sort((a, b) => {\r\n        return sortConfig.direction === 'ascending'\r\n          ? a[sortConfig.key].common.localeCompare(b[sortConfig.key].common)\r\n          : b[sortConfig.key].common.localeCompare(a[sortConfig.key].common)\r\n      })\r\n    } else if (sortConfig.key === 'capital' || sortConfig.key === 'continents') {\r\n      sortableItems.sort((a, b) => {\r\n        return sortConfig.direction === 'ascending'\r\n          ? a[sortConfig.key][0].localeCompare(b[sortConfig.key][0])\r\n          : b[sortConfig.key][0].localeCompare(a[sortConfig.key][0])\r\n      })\r\n    } else {\r\n      sortableItems.sort((a, b) => {\r\n        return a[sortConfig.key] && sortConfig.direction === 'ascending'\r\n          ? a[sortConfig.key].localeCompare(b[sortConfig.key])\r\n          : b[sortConfig.key].localeCompare(a[sortConfig.key])\r\n      })\r\n    }\r\n\r\n    return sortableItems\r\n  }, [items, sortConfig])\r\n\r\n  const requestSort = (key) => {\r\n    let direction =\r\n      sortConfig.direction === 'ascending' ? 'descending' : 'ascending'\r\n    setSortConfig({ key, direction })\r\n    window.localStorage.setItem('sort key', key)\r\n    window.localStorage.setItem('direction', direction)\r\n  }\r\n\r\n  return { items: sortedItems, requestSort }\r\n}\r\n\r\nexport default useSortableData1\r\n\r\n// original table sort code: https://codesandbox.io/s/table-sorting-gxt7g?file=/src/App.js:161-2693\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import React, { Suspense } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { isIE } from 'react-device-detect'\r\nimport { Segment, Table, Icon, Image } from 'semantic-ui-react'\r\nimport { filterCountries } from '../reducers/countryReducer'\r\nimport useSortableData from '../services/sortableTable'\r\n\r\nconst TableBody = ({ items, unit }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (country) => {\r\n    dispatch(filterCountries(country))\r\n  }\r\n  return (\r\n    <Table.Body>\r\n      <>\r\n        {items.map((item) => {\r\n          const areaConvert = Math.round(item.area / 2.59)\r\n          return (\r\n            <Table.Row key={item.cca3} onClick={() => handleClick(item)}>\r\n              <Table.Cell textAlign=\"center\">{item.cca3}</Table.Cell>\r\n              <Table.Cell>\r\n                <Image\r\n                  srcSet={`${item.flags.svg} 100w`}\r\n                  size=\"tiny\"\r\n                  src={isIE ? item.flags.png : item.flags.svg}\r\n                  alt=\"country flag\"\r\n                  bordered\r\n                  loading=\"lazy\"\r\n                />\r\n              </Table.Cell>\r\n              <Table.Cell>{item.name.common}</Table.Cell>\r\n              <Table.Cell>\r\n                {item.capital === undefined ? 'no data' : item.capital}\r\n              </Table.Cell>\r\n              <Table.Cell>{item.continents[0]}</Table.Cell>\r\n              <Table.Cell>{item.region}</Table.Cell>\r\n              <Table.Cell>{item.subregion}</Table.Cell>\r\n              <Table.Cell>{item.population.toLocaleString()}</Table.Cell>\r\n              <Table.Cell>\r\n                {unit === 'imperial'\r\n                  ? areaConvert.toLocaleString()\r\n                  : item.area.toLocaleString()}\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          )\r\n        })}\r\n      </>\r\n    </Table.Body>\r\n  )\r\n}\r\n\r\nconst CountriesTable1 = () => {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector((state) => state)\r\n\r\n  const unit = useSelector((state) => state.unit.unit)\r\n\r\n  const countriesFiltered = useSelector((state) => {\r\n    return state.countries.filtered.length > 0\r\n      ? state.countries.filtered\r\n      : state.countries.initialCountries\r\n  })\r\n\r\n  const tableHeaders = [\r\n    { fieldName: 'CCA3', id: 'cca3' },\r\n    { fieldName: 'Flag', id: 'flag' },\r\n    { fieldName: 'Name', id: 'name' },\r\n    { fieldName: 'Capital', id: 'capital' },\r\n    { fieldName: 'Continent', id: 'continents' },\r\n    { fieldName: 'Region', id: 'region' },\r\n    { fieldName: 'Subregion', id: 'subregion' },\r\n    { fieldName: 'Population', id: 'population' },\r\n    { fieldName: 'Area km²', id: 'area' },\r\n  ]\r\n\r\n  const { items, requestSort } = useSortableData(countriesFiltered)\r\n\r\n  const sortIcons = (id) => {\r\n    if (\r\n      window.localStorage.getItem('direction') === 'ascending' &&\r\n      window.localStorage.getItem('sort key') === id\r\n    ) {\r\n      return <Icon name=\"caret up\" />\r\n    } else if (\r\n      window.localStorage.getItem('direction') === 'descending' &&\r\n      window.localStorage.getItem('sort key') === id\r\n    ) {\r\n      return <Icon name=\"caret down\" />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Segment attached=\"bottom\">\r\n      {countriesFiltered.length > 1 ? (\r\n        <>\r\n          <Table sortable compact selectable unstackable size=\"small\">\r\n            <Table.Header\r\n              id={\r\n                state.countries.filter.region.toLowerCase() === 'all'\r\n                  ? 'one'\r\n                  : 'two'\r\n              }\r\n            >\r\n              <Table.Row>\r\n                <>\r\n                  {tableHeaders.map(({ fieldName, id }) => (\r\n                    <Table.HeaderCell key={id} onClick={() => requestSort(id)}>\r\n                      {fieldName === 'Area km²'\r\n                        ? unit === 'metric'\r\n                          ? fieldName\r\n                          : 'Area mi²'\r\n                        : fieldName}\r\n                      {sortIcons(id)}\r\n                    </Table.HeaderCell>\r\n                  ))}\r\n                </>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Suspense fallback={<Icon loading size=\"big\" name=\"spinner\" />}>\r\n              <TableBody items={items} unit={unit} />\r\n            </Suspense>\r\n          </Table>\r\n        </>\r\n      ) : null}\r\n    </Segment>\r\n  )\r\n}\r\n\r\nconst CountriesTable = React.memo(CountriesTable1)\r\n\r\nexport default CountriesTable\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided into individual cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;"],"sourceRoot":""}